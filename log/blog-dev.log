2022-05-03 16:01:41.769  INFO 12064 --- [restartedMain] com.blog.BlogApplication                 : Starting BlogApplication on guodoudou with PID 12064 (F:\persionblog\blog\target\classes started by Administrator in F:\persionblog)
2022-05-03 16:01:41.799 DEBUG 12064 --- [restartedMain] com.blog.BlogApplication                 : Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2022-05-03 16:01:41.799  INFO 12064 --- [restartedMain] com.blog.BlogApplication                 : The following profiles are active: dev
2022-05-03 16:01:41.829  INFO 12064 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-05-03 16:01:41.829  INFO 12064 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-05-03 16:01:43.114  INFO 12064 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-05-03 16:01:43.124  INFO 12064 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2022-05-03 16:01:43.124  INFO 12064 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.31]
2022-05-03 16:01:43.124  INFO 12064 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.26] using APR version [1.7.0].
2022-05-03 16:01:43.124  INFO 12064 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2022-05-03 16:01:43.124  INFO 12064 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2022-05-03 16:01:43.129  INFO 12064 --- [restartedMain] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.1.1i  8 Dec 2020]
2022-05-03 16:01:43.249  INFO 12064 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2022-05-03 16:01:43.249  INFO 12064 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1420 ms
2022-05-03 16:01:43.922  INFO 12064 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2022-05-03 16:01:43.984  INFO 12064 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2022-05-03 16:01:44.354  INFO 12064 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2022-05-03 16:01:44.401  INFO 12064 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-05-03 16:01:44.401  INFO 12064 --- [restartedMain] com.blog.BlogApplication                 : Started BlogApplication in 2.974 seconds (JVM running for 4.311)
2022-05-03 16:03:06.414  INFO 12064 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-05-03 16:03:06.415  INFO 12064 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2022-05-03 16:03:06.460  INFO 12064 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 45 ms
2022-05-03 16:03:06.525  INFO 12064 --- [http-nio-8080-exec-1] com.blog.aspect.LogAspect                : Request: LogAspect.RequestLog(url=http://localhost:8080/, ip=0:0:0:0:0:0:0:1, classMethod=com.blog.controller.IndexController.toIndex, args=[1, {}])
2022-05-03 16:03:06.673  INFO 12064 --- [http-nio-8080-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-05-03 16:03:08.596  INFO 12064 --- [http-nio-8080-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-05-03 16:03:08.645 DEBUG 12064 --- [http-nio-8080-exec-1] com.blog.dao.BlogDao.getIndexBlog_COUNT  : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t, t_user u WHERE b.type_id = t.id AND u.id = b.user_id 
2022-05-03 16:03:08.669 DEBUG 12064 --- [http-nio-8080-exec-1] com.blog.dao.BlogDao.getIndexBlog_COUNT  : ==> Parameters: 
2022-05-03 16:03:08.858 DEBUG 12064 --- [http-nio-8080-exec-1] com.blog.dao.BlogDao.getIndexBlog_COUNT  : <==      Total: 1
2022-05-03 16:03:08.862 DEBUG 12064 --- [http-nio-8080-exec-1] com.blog.dao.BlogDao.getIndexBlog        : ==>  Preparing: /*主页博客展示*/ select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name typename, t.id typeid, u.nickname, u.avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and u.id = b.user_id order by b.update_time desc LIMIT ? 
2022-05-03 16:03:08.863 DEBUG 12064 --- [http-nio-8080-exec-1] com.blog.dao.BlogDao.getIndexBlog        : ==> Parameters: 8(Integer)
2022-05-03 16:03:08.895 DEBUG 12064 --- [http-nio-8080-exec-1] com.blog.dao.BlogDao.getIndexBlog        : <==      Total: 8
2022-05-03 16:03:08.900 DEBUG 12064 --- [http-nio-8080-exec-1] com.blog.dao.TypeDao.getBlogType         : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title, b.type_id from t_type t, t_blog b where t.id = b.type_id 
2022-05-03 16:03:08.900 DEBUG 12064 --- [http-nio-8080-exec-1] com.blog.dao.TypeDao.getBlogType         : ==> Parameters: 
2022-05-03 16:03:08.903 DEBUG 12064 --- [http-nio-8080-exec-1] com.blog.dao.TypeDao.getBlogType         : <==      Total: 8
2022-05-03 16:03:08.904 DEBUG 12064 --- [http-nio-8080-exec-1] com.blog.dao.TagDao.getBlogTag           : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title from t_tag t, t_blog b, t_blog_tags bt where t.id = bt.tag_id and b.id = bt.blog_id 
2022-05-03 16:03:08.904 DEBUG 12064 --- [http-nio-8080-exec-1] com.blog.dao.TagDao.getBlogTag           : ==> Parameters: 
2022-05-03 16:03:08.908 DEBUG 12064 --- [http-nio-8080-exec-1] com.blog.dao.TagDao.getBlogTag           : <==      Total: 12
2022-05-03 16:03:08.909 DEBUG 12064 --- [http-nio-8080-exec-1] c.blog.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: select id, title, recommend from t_blog order by update_time desc; 
2022-05-03 16:03:08.909 DEBUG 12064 --- [http-nio-8080-exec-1] c.blog.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2022-05-03 16:03:08.912 DEBUG 12064 --- [http-nio-8080-exec-1] c.blog.dao.BlogDao.getAllRecommendBlog   : <==      Total: 8
2022-05-03 16:03:08.913  INFO 12064 --- [http-nio-8080-exec-1] com.blog.aspect.LogAspect                : ------------doAfter------------
2022-05-03 16:03:08.914  INFO 12064 --- [http-nio-8080-exec-1] com.blog.aspect.LogAspect                : Result: index
2022-05-03 16:14:41.761 DEBUG 12064 --- [http-nio-8080-exec-9] c.b.d.U.queryByUsernameAndPassword       : ==>  Preparing: select * from blog.t_user where username = ? and password = ?; 
2022-05-03 16:14:41.762 DEBUG 12064 --- [http-nio-8080-exec-9] c.b.d.U.queryByUsernameAndPassword       : ==> Parameters: admin(String), e10adc3949ba59abbe56e057f20f883e(String)
2022-05-03 16:14:41.800 DEBUG 12064 --- [http-nio-8080-exec-9] c.b.d.U.queryByUsernameAndPassword       : <==      Total: 1
2022-05-03 16:14:53.424 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id 
2022-05-03 16:14:53.425 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==> Parameters: 
2022-05-03 16:14:53.427 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.BlogDao.getAllBlog_COUNT    : <==      Total: 1
2022-05-03 16:14:53.428 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.BlogDao.getAllBlog          : ==>  Preparing: /*后台博客展示*/ select b.id bId , b.title title, b.update_time updateTime, b.recommend recommend, b.published published, b.type_id typeId, t.id tId , t.name name from t_blog b, t_type t where b.type_id = t.id /*博客类型id=类型id*/ LIMIT ? 
2022-05-03 16:14:53.428 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.BlogDao.getAllBlog          : ==> Parameters: 5(Integer)
2022-05-03 16:14:53.432 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.BlogDao.getAllBlog          : <==      Total: 5
2022-05-03 16:14:53.556 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type 
2022-05-03 16:14:53.557 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 
2022-05-03 16:14:53.558 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:14:53.574 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TagDao.getAllTag            : ==>  Preparing: select * from blog.t_tag 
2022-05-03 16:14:53.575 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TagDao.getAllTag            : ==> Parameters: 
2022-05-03 16:14:53.576 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TagDao.getAllTag            : <==      Total: 7
2022-05-03 16:15:16.754 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id 
2022-05-03 16:15:16.754 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==> Parameters: 
2022-05-03 16:15:16.755 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.BlogDao.getAllBlog_COUNT    : <==      Total: 1
2022-05-03 16:15:16.756 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.BlogDao.getAllBlog          : ==>  Preparing: /*后台博客展示*/ select b.id bId , b.title title, b.update_time updateTime, b.recommend recommend, b.published published, b.type_id typeId, t.id tId , t.name name from t_blog b, t_type t where b.type_id = t.id /*博客类型id=类型id*/ LIMIT ? 
2022-05-03 16:15:16.756 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.BlogDao.getAllBlog          : ==> Parameters: 5(Integer)
2022-05-03 16:15:16.758 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.BlogDao.getAllBlog          : <==      Total: 5
2022-05-03 16:15:16.759 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type 
2022-05-03 16:15:16.759 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 
2022-05-03 16:15:16.760 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:15:16.761 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TagDao.getAllTag            : ==>  Preparing: select * from blog.t_tag 
2022-05-03 16:15:16.761 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TagDao.getAllTag            : ==> Parameters: 
2022-05-03 16:15:16.763 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TagDao.getAllTag            : <==      Total: 7
2022-05-03 16:15:22.476 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id 
2022-05-03 16:15:22.477 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==> Parameters: 
2022-05-03 16:15:22.479 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.BlogDao.getAllBlog_COUNT    : <==      Total: 1
2022-05-03 16:15:22.480 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.BlogDao.getAllBlog          : ==>  Preparing: /*后台博客展示*/ select b.id bId , b.title title, b.update_time updateTime, b.recommend recommend, b.published published, b.type_id typeId, t.id tId , t.name name from t_blog b, t_type t where b.type_id = t.id /*博客类型id=类型id*/ LIMIT ?, ? 
2022-05-03 16:15:22.482 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.BlogDao.getAllBlog          : ==> Parameters: 5(Integer), 5(Integer)
2022-05-03 16:15:22.485 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.BlogDao.getAllBlog          : <==      Total: 3
2022-05-03 16:15:22.487 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type 
2022-05-03 16:15:22.488 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 
2022-05-03 16:15:22.489 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:15:22.491 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.TagDao.getAllTag            : ==>  Preparing: select * from blog.t_tag 
2022-05-03 16:15:22.491 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.TagDao.getAllTag            : ==> Parameters: 
2022-05-03 16:15:22.492 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.TagDao.getAllTag            : <==      Total: 7
2022-05-03 16:15:24.486 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id 
2022-05-03 16:15:24.486 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==> Parameters: 
2022-05-03 16:15:24.487 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getAllBlog_COUNT    : <==      Total: 1
2022-05-03 16:15:24.487 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getAllBlog          : ==>  Preparing: /*后台博客展示*/ select b.id bId , b.title title, b.update_time updateTime, b.recommend recommend, b.published published, b.type_id typeId, t.id tId , t.name name from t_blog b, t_type t where b.type_id = t.id /*博客类型id=类型id*/ LIMIT ?, ? 
2022-05-03 16:15:24.488 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getAllBlog          : ==> Parameters: 5(Integer), 5(Integer)
2022-05-03 16:15:24.489 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getAllBlog          : <==      Total: 3
2022-05-03 16:15:24.491 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type 
2022-05-03 16:15:24.491 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 
2022-05-03 16:15:24.492 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:15:24.494 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TagDao.getAllTag            : ==>  Preparing: select * from blog.t_tag 
2022-05-03 16:15:24.494 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TagDao.getAllTag            : ==> Parameters: 
2022-05-03 16:15:24.495 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TagDao.getAllTag            : <==      Total: 7
2022-05-03 16:15:26.692 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id 
2022-05-03 16:15:26.692 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==> Parameters: 
2022-05-03 16:15:26.693 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.BlogDao.getAllBlog_COUNT    : <==      Total: 1
2022-05-03 16:15:26.694 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.BlogDao.getAllBlog          : ==>  Preparing: /*后台博客展示*/ select b.id bId , b.title title, b.update_time updateTime, b.recommend recommend, b.published published, b.type_id typeId, t.id tId , t.name name from t_blog b, t_type t where b.type_id = t.id /*博客类型id=类型id*/ LIMIT ? 
2022-05-03 16:15:26.694 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.BlogDao.getAllBlog          : ==> Parameters: 5(Integer)
2022-05-03 16:15:26.697 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.BlogDao.getAllBlog          : <==      Total: 5
2022-05-03 16:15:26.698 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type 
2022-05-03 16:15:26.699 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 
2022-05-03 16:15:26.699 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:15:26.701 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TagDao.getAllTag            : ==>  Preparing: select * from blog.t_tag 
2022-05-03 16:15:26.701 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TagDao.getAllTag            : ==> Parameters: 
2022-05-03 16:15:26.702 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TagDao.getAllTag            : <==      Total: 7
2022-05-03 16:15:36.626  INFO 12064 --- [http-nio-8080-exec-5] com.blog.aspect.LogAspect                : Request: LogAspect.RequestLog(url=http://localhost:8080/, ip=0:0:0:0:0:0:0:1, classMethod=com.blog.controller.IndexController.toIndex, args=[1, {}])
2022-05-03 16:15:36.630 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.BlogDao.getIndexBlog_COUNT  : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t, t_user u WHERE b.type_id = t.id AND u.id = b.user_id 
2022-05-03 16:15:36.631 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.BlogDao.getIndexBlog_COUNT  : ==> Parameters: 
2022-05-03 16:15:36.634 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.BlogDao.getIndexBlog_COUNT  : <==      Total: 1
2022-05-03 16:15:36.634 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.BlogDao.getIndexBlog        : ==>  Preparing: /*主页博客展示*/ select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name typename, t.id typeid, u.nickname, u.avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and u.id = b.user_id order by b.update_time desc LIMIT ? 
2022-05-03 16:15:36.634 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.BlogDao.getIndexBlog        : ==> Parameters: 8(Integer)
2022-05-03 16:15:36.642 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.BlogDao.getIndexBlog        : <==      Total: 8
2022-05-03 16:15:36.643 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TypeDao.getBlogType         : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title, b.type_id from t_type t, t_blog b where t.id = b.type_id 
2022-05-03 16:15:36.644 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TypeDao.getBlogType         : ==> Parameters: 
2022-05-03 16:15:36.647 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TypeDao.getBlogType         : <==      Total: 8
2022-05-03 16:15:36.648 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TagDao.getBlogTag           : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title from t_tag t, t_blog b, t_blog_tags bt where t.id = bt.tag_id and b.id = bt.blog_id 
2022-05-03 16:15:36.649 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TagDao.getBlogTag           : ==> Parameters: 
2022-05-03 16:15:36.653 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TagDao.getBlogTag           : <==      Total: 12
2022-05-03 16:15:36.657 DEBUG 12064 --- [http-nio-8080-exec-5] c.blog.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: select id, title, recommend from t_blog order by update_time desc; 
2022-05-03 16:15:36.658 DEBUG 12064 --- [http-nio-8080-exec-5] c.blog.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2022-05-03 16:15:36.661 DEBUG 12064 --- [http-nio-8080-exec-5] c.blog.dao.BlogDao.getAllRecommendBlog   : <==      Total: 8
2022-05-03 16:15:36.661  INFO 12064 --- [http-nio-8080-exec-5] com.blog.aspect.LogAspect                : ------------doAfter------------
2022-05-03 16:15:36.661  INFO 12064 --- [http-nio-8080-exec-5] com.blog.aspect.LogAspect                : Result: index
2022-05-03 16:15:59.560 DEBUG 12064 --- [http-nio-8080-exec-8] c.b.d.U.queryByUsernameAndPassword       : ==>  Preparing: select * from blog.t_user where username = ? and password = ?; 
2022-05-03 16:15:59.561 DEBUG 12064 --- [http-nio-8080-exec-8] c.b.d.U.queryByUsernameAndPassword       : ==> Parameters: admin(String), e10adc3949ba59abbe56e057f20f883e(String)
2022-05-03 16:15:59.563 DEBUG 12064 --- [http-nio-8080-exec-8] c.b.d.U.queryByUsernameAndPassword       : <==      Total: 1
2022-05-03 16:16:11.265 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id 
2022-05-03 16:16:11.265 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==> Parameters: 
2022-05-03 16:16:11.266 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.BlogDao.getAllBlog_COUNT    : <==      Total: 1
2022-05-03 16:16:11.267 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.BlogDao.getAllBlog          : ==>  Preparing: /*后台博客展示*/ select b.id bId , b.title title, b.update_time updateTime, b.recommend recommend, b.published published, b.type_id typeId, t.id tId , t.name name from t_blog b, t_type t where b.type_id = t.id /*博客类型id=类型id*/ LIMIT ? 
2022-05-03 16:16:11.267 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.BlogDao.getAllBlog          : ==> Parameters: 5(Integer)
2022-05-03 16:16:11.269 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.BlogDao.getAllBlog          : <==      Total: 5
2022-05-03 16:16:11.271 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type 
2022-05-03 16:16:11.272 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 
2022-05-03 16:16:11.272 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:16:11.273 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TagDao.getAllTag            : ==>  Preparing: select * from blog.t_tag 
2022-05-03 16:16:11.273 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TagDao.getAllTag            : ==> Parameters: 
2022-05-03 16:16:11.274 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TagDao.getAllTag            : <==      Total: 7
2022-05-03 16:16:33.275 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id 
2022-05-03 16:16:33.275 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==> Parameters: 
2022-05-03 16:16:33.277 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.BlogDao.getAllBlog_COUNT    : <==      Total: 1
2022-05-03 16:16:33.278 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.BlogDao.getAllBlog          : ==>  Preparing: /*后台博客展示*/ select b.id bId , b.title title, b.update_time updateTime, b.recommend recommend, b.published published, b.type_id typeId, t.id tId , t.name name from t_blog b, t_type t where b.type_id = t.id /*博客类型id=类型id*/ LIMIT ? 
2022-05-03 16:16:33.278 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.BlogDao.getAllBlog          : ==> Parameters: 5(Integer)
2022-05-03 16:16:33.281 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.BlogDao.getAllBlog          : <==      Total: 5
2022-05-03 16:16:33.283 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type 
2022-05-03 16:16:33.283 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 
2022-05-03 16:16:33.284 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:16:33.285 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TagDao.getAllTag            : ==>  Preparing: select * from blog.t_tag 
2022-05-03 16:16:33.285 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TagDao.getAllTag            : ==> Parameters: 
2022-05-03 16:16:33.286 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TagDao.getAllTag            : <==      Total: 7
2022-05-03 16:16:34.068 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id 
2022-05-03 16:16:34.069 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==> Parameters: 
2022-05-03 16:16:34.069 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.BlogDao.getAllBlog_COUNT    : <==      Total: 1
2022-05-03 16:16:34.070 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.BlogDao.getAllBlog          : ==>  Preparing: /*后台博客展示*/ select b.id bId , b.title title, b.update_time updateTime, b.recommend recommend, b.published published, b.type_id typeId, t.id tId , t.name name from t_blog b, t_type t where b.type_id = t.id /*博客类型id=类型id*/ LIMIT ? 
2022-05-03 16:16:34.070 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.BlogDao.getAllBlog          : ==> Parameters: 5(Integer)
2022-05-03 16:16:34.072 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.BlogDao.getAllBlog          : <==      Total: 5
2022-05-03 16:16:34.073 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type 
2022-05-03 16:16:34.073 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 
2022-05-03 16:16:34.074 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:16:34.075 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TagDao.getAllTag            : ==>  Preparing: select * from blog.t_tag 
2022-05-03 16:16:34.076 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TagDao.getAllTag            : ==> Parameters: 
2022-05-03 16:16:34.077 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TagDao.getAllTag            : <==      Total: 7
2022-05-03 16:16:37.182 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id 
2022-05-03 16:16:37.182 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==> Parameters: 
2022-05-03 16:16:37.183 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.BlogDao.getAllBlog_COUNT    : <==      Total: 1
2022-05-03 16:16:37.184 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.BlogDao.getAllBlog          : ==>  Preparing: /*后台博客展示*/ select b.id bId , b.title title, b.update_time updateTime, b.recommend recommend, b.published published, b.type_id typeId, t.id tId , t.name name from t_blog b, t_type t where b.type_id = t.id /*博客类型id=类型id*/ LIMIT ?, ? 
2022-05-03 16:16:37.184 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.BlogDao.getAllBlog          : ==> Parameters: 5(Integer), 5(Integer)
2022-05-03 16:16:37.185 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.BlogDao.getAllBlog          : <==      Total: 3
2022-05-03 16:16:37.186 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type 
2022-05-03 16:16:37.186 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 
2022-05-03 16:16:37.187 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:16:37.189 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TagDao.getAllTag            : ==>  Preparing: select * from blog.t_tag 
2022-05-03 16:16:37.190 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TagDao.getAllTag            : ==> Parameters: 
2022-05-03 16:16:37.191 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TagDao.getAllTag            : <==      Total: 7
2022-05-03 16:16:39.381 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id 
2022-05-03 16:16:39.381 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==> Parameters: 
2022-05-03 16:16:39.382 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.BlogDao.getAllBlog_COUNT    : <==      Total: 1
2022-05-03 16:16:39.383 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.BlogDao.getAllBlog          : ==>  Preparing: /*后台博客展示*/ select b.id bId , b.title title, b.update_time updateTime, b.recommend recommend, b.published published, b.type_id typeId, t.id tId , t.name name from t_blog b, t_type t where b.type_id = t.id /*博客类型id=类型id*/ LIMIT ?, ? 
2022-05-03 16:16:39.383 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.BlogDao.getAllBlog          : ==> Parameters: 5(Integer), 5(Integer)
2022-05-03 16:16:39.385 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.BlogDao.getAllBlog          : <==      Total: 3
2022-05-03 16:16:39.386 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type 
2022-05-03 16:16:39.386 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 
2022-05-03 16:16:39.387 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:16:39.388 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.TagDao.getAllTag            : ==>  Preparing: select * from blog.t_tag 
2022-05-03 16:16:39.388 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.TagDao.getAllTag            : ==> Parameters: 
2022-05-03 16:16:39.389 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.TagDao.getAllTag            : <==      Total: 7
2022-05-03 16:16:47.207 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.BlogDao.getBlog             : ==>  Preparing: /*后台展示博客*/ select b.id, b.published, b.flag, b.title, b.content, b.type_id, b.tag_ids, b.first_picture, b.description, b.recommend, b.share_statement, b.appreciation, b.commentabled from t_blog b where b.id = ?; 
2022-05-03 16:16:47.207 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.BlogDao.getBlog             : ==> Parameters: 6(Long)
2022-05-03 16:16:47.209 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.BlogDao.getBlog             : <==      Total: 1
2022-05-03 16:16:47.210 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type 
2022-05-03 16:16:47.210 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 
2022-05-03 16:16:47.211 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:16:47.212 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TagDao.getAllTag            : ==>  Preparing: select * from blog.t_tag 
2022-05-03 16:16:47.212 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TagDao.getAllTag            : ==> Parameters: 
2022-05-03 16:16:47.213 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TagDao.getAllTag            : <==      Total: 7
2022-05-03 16:17:12.351 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id 
2022-05-03 16:17:12.351 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==> Parameters: 
2022-05-03 16:17:12.353 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.BlogDao.getAllBlog_COUNT    : <==      Total: 1
2022-05-03 16:17:12.354 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.BlogDao.getAllBlog          : ==>  Preparing: /*后台博客展示*/ select b.id bId , b.title title, b.update_time updateTime, b.recommend recommend, b.published published, b.type_id typeId, t.id tId , t.name name from t_blog b, t_type t where b.type_id = t.id /*博客类型id=类型id*/ LIMIT ? 
2022-05-03 16:17:12.354 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.BlogDao.getAllBlog          : ==> Parameters: 5(Integer)
2022-05-03 16:17:12.356 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.BlogDao.getAllBlog          : <==      Total: 5
2022-05-03 16:17:12.358 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type 
2022-05-03 16:17:12.358 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 
2022-05-03 16:17:12.359 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:17:12.360 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TagDao.getAllTag            : ==>  Preparing: select * from blog.t_tag 
2022-05-03 16:17:12.361 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TagDao.getAllTag            : ==> Parameters: 
2022-05-03 16:17:12.362 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TagDao.getAllTag            : <==      Total: 7
2022-05-03 16:17:16.951 DEBUG 12064 --- [http-nio-8080-exec-1] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type 
2022-05-03 16:17:16.951 DEBUG 12064 --- [http-nio-8080-exec-1] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 
2022-05-03 16:17:16.953 DEBUG 12064 --- [http-nio-8080-exec-1] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:17:16.954 DEBUG 12064 --- [http-nio-8080-exec-1] com.blog.dao.TagDao.getAllTag            : ==>  Preparing: select * from blog.t_tag 
2022-05-03 16:17:16.955 DEBUG 12064 --- [http-nio-8080-exec-1] com.blog.dao.TagDao.getAllTag            : ==> Parameters: 
2022-05-03 16:17:16.956 DEBUG 12064 --- [http-nio-8080-exec-1] com.blog.dao.TagDao.getAllTag            : <==      Total: 7
2022-05-03 16:17:37.392 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getType             : ==>  Preparing: select id,name from blog.t_type where id = ? 
2022-05-03 16:17:37.392 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getType             : ==> Parameters: 1(Long)
2022-05-03 16:17:37.393 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getType             : <==      Total: 1
2022-05-03 16:17:37.394 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TagDao.getTag               : ==>  Preparing: select id,name from blog.t_tag where id = ? 
2022-05-03 16:17:37.395 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TagDao.getTag               : ==> Parameters: 4(Long)
2022-05-03 16:17:37.397 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TagDao.getTag               : <==      Total: 1
2022-05-03 16:17:37.398 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TagDao.getTag               : ==>  Preparing: select id,name from blog.t_tag where id = ? 
2022-05-03 16:17:37.398 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TagDao.getTag               : ==> Parameters: 5(Long)
2022-05-03 16:17:37.399 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TagDao.getTag               : <==      Total: 1
2022-05-03 16:17:37.402 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.saveBlog            : ==>  Preparing: insert into t_blog (title, content, first_picture, flag, views, appreciation, share_statement, commentabled,published, recommend, create_time, update_time, type_id, tag_ids, user_id, description) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); 
2022-05-03 16:17:37.409 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.saveBlog            : ==> Parameters: nhao (String), qe (String), 无,a g(String), 转载(String), 0(Integer), false(Boolean), false(Boolean), false(Boolean), true(Boolean), true(Boolean), 2022-05-03 16:17:37.401(Timestamp), 2022-05-03 16:17:37.401(Timestamp), 1(Long), 4,5(String), 2(Long), g (String)
2022-05-03 16:17:37.842 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.saveBlog            : <==    Updates: 1
2022-05-03 16:17:37.844 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.saveBlogAndTag      : ==>  Preparing: insert into t_blog_tags (tag_id, blog_id) values (?,?); 
2022-05-03 16:17:37.844 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.saveBlogAndTag      : ==> Parameters: 4(Long), 12(Long)
2022-05-03 16:17:37.874 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.saveBlogAndTag      : <==    Updates: 1
2022-05-03 16:17:37.875 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.saveBlogAndTag      : ==>  Preparing: insert into t_blog_tags (tag_id, blog_id) values (?,?); 
2022-05-03 16:17:37.875 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.saveBlogAndTag      : ==> Parameters: 5(Long), 12(Long)
2022-05-03 16:17:37.908 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.saveBlogAndTag      : <==    Updates: 1
2022-05-03 16:17:38.002 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id 
2022-05-03 16:17:38.002 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==> Parameters: 
2022-05-03 16:17:38.003 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.BlogDao.getAllBlog_COUNT    : <==      Total: 1
2022-05-03 16:17:38.003 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.BlogDao.getAllBlog          : ==>  Preparing: /*后台博客展示*/ select b.id bId , b.title title, b.update_time updateTime, b.recommend recommend, b.published published, b.type_id typeId, t.id tId , t.name name from t_blog b, t_type t where b.type_id = t.id /*博客类型id=类型id*/ LIMIT ? 
2022-05-03 16:17:38.003 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.BlogDao.getAllBlog          : ==> Parameters: 5(Integer)
2022-05-03 16:17:38.004 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.BlogDao.getAllBlog          : <==      Total: 5
2022-05-03 16:17:38.005 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type 
2022-05-03 16:17:38.005 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 
2022-05-03 16:17:38.006 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:17:38.007 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.TagDao.getAllTag            : ==>  Preparing: select * from blog.t_tag 
2022-05-03 16:17:38.007 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.TagDao.getAllTag            : ==> Parameters: 
2022-05-03 16:17:38.008 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.TagDao.getAllTag            : <==      Total: 7
2022-05-03 16:17:42.153 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id 
2022-05-03 16:17:42.154 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==> Parameters: 
2022-05-03 16:17:42.155 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.BlogDao.getAllBlog_COUNT    : <==      Total: 1
2022-05-03 16:17:42.155 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.BlogDao.getAllBlog          : ==>  Preparing: /*后台博客展示*/ select b.id bId , b.title title, b.update_time updateTime, b.recommend recommend, b.published published, b.type_id typeId, t.id tId , t.name name from t_blog b, t_type t where b.type_id = t.id /*博客类型id=类型id*/ LIMIT ?, ? 
2022-05-03 16:17:42.155 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.BlogDao.getAllBlog          : ==> Parameters: 5(Integer), 5(Integer)
2022-05-03 16:17:42.157 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.BlogDao.getAllBlog          : <==      Total: 4
2022-05-03 16:17:42.159 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type 
2022-05-03 16:17:42.159 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 
2022-05-03 16:17:42.159 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:17:42.161 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.TagDao.getAllTag            : ==>  Preparing: select * from blog.t_tag 
2022-05-03 16:17:42.161 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.TagDao.getAllTag            : ==> Parameters: 
2022-05-03 16:17:42.162 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.TagDao.getAllTag            : <==      Total: 7
2022-05-03 16:17:46.658 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type 
2022-05-03 16:17:46.658 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 
2022-05-03 16:17:46.659 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:17:46.661 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TagDao.getAllTag            : ==>  Preparing: select * from blog.t_tag 
2022-05-03 16:17:46.661 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TagDao.getAllTag            : ==> Parameters: 
2022-05-03 16:17:46.662 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TagDao.getAllTag            : <==      Total: 7
2022-05-03 16:17:58.365 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getType             : ==>  Preparing: select id,name from blog.t_type where id = ? 
2022-05-03 16:17:58.366 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getType             : ==> Parameters: 1(Long)
2022-05-03 16:17:58.367 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getType             : <==      Total: 1
2022-05-03 16:17:58.369 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TagDao.getTag               : ==>  Preparing: select id,name from blog.t_tag where id = ? 
2022-05-03 16:17:58.369 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TagDao.getTag               : ==> Parameters: 5(Long)
2022-05-03 16:17:58.370 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TagDao.getTag               : <==      Total: 1
2022-05-03 16:17:58.370 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TagDao.getTag               : ==>  Preparing: select id,name from blog.t_tag where id = ? 
2022-05-03 16:17:58.370 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TagDao.getTag               : ==> Parameters: 6(Long)
2022-05-03 16:17:58.371 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TagDao.getTag               : <==      Total: 1
2022-05-03 16:17:58.371 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.BlogDao.saveBlog            : ==>  Preparing: insert into t_blog (title, content, first_picture, flag, views, appreciation, share_statement, commentabled,published, recommend, create_time, update_time, type_id, tag_ids, user_id, description) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); 
2022-05-03 16:17:58.372 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.BlogDao.saveBlog            : ==> Parameters: 1(String), 11(String), 1,1(String), 转载(String), 0(Integer), false(Boolean), false(Boolean), false(Boolean), false(Boolean), true(Boolean), 2022-05-03 16:17:58.371(Timestamp), 2022-05-03 16:17:58.371(Timestamp), 1(Long), 5,6(String), 2(Long), 1(String)
2022-05-03 16:17:58.501 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.BlogDao.saveBlog            : <==    Updates: 1
2022-05-03 16:17:58.502 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.BlogDao.saveBlogAndTag      : ==>  Preparing: insert into t_blog_tags (tag_id, blog_id) values (?,?); 
2022-05-03 16:17:58.502 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.BlogDao.saveBlogAndTag      : ==> Parameters: 5(Long), 13(Long)
2022-05-03 16:17:58.596 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.BlogDao.saveBlogAndTag      : <==    Updates: 1
2022-05-03 16:17:58.598 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.BlogDao.saveBlogAndTag      : ==>  Preparing: insert into t_blog_tags (tag_id, blog_id) values (?,?); 
2022-05-03 16:17:58.598 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.BlogDao.saveBlogAndTag      : ==> Parameters: 6(Long), 13(Long)
2022-05-03 16:17:58.746 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.BlogDao.saveBlogAndTag      : <==    Updates: 1
2022-05-03 16:17:58.750 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id 
2022-05-03 16:17:58.750 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==> Parameters: 
2022-05-03 16:17:58.789 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getAllBlog_COUNT    : <==      Total: 1
2022-05-03 16:17:58.789 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getAllBlog          : ==>  Preparing: /*后台博客展示*/ select b.id bId , b.title title, b.update_time updateTime, b.recommend recommend, b.published published, b.type_id typeId, t.id tId , t.name name from t_blog b, t_type t where b.type_id = t.id /*博客类型id=类型id*/ LIMIT ? 
2022-05-03 16:17:58.789 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getAllBlog          : ==> Parameters: 5(Integer)
2022-05-03 16:17:58.790 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getAllBlog          : <==      Total: 5
2022-05-03 16:17:58.791 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type 
2022-05-03 16:17:58.791 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 
2022-05-03 16:17:58.792 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:17:58.792 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TagDao.getAllTag            : ==>  Preparing: select * from blog.t_tag 
2022-05-03 16:17:58.792 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TagDao.getAllTag            : ==> Parameters: 
2022-05-03 16:17:58.793 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TagDao.getAllTag            : <==      Total: 7
2022-05-03 16:18:06.425 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id 
2022-05-03 16:18:06.425 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==> Parameters: 
2022-05-03 16:18:06.426 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.BlogDao.getAllBlog_COUNT    : <==      Total: 1
2022-05-03 16:18:06.427 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.BlogDao.getAllBlog          : ==>  Preparing: /*后台博客展示*/ select b.id bId , b.title title, b.update_time updateTime, b.recommend recommend, b.published published, b.type_id typeId, t.id tId , t.name name from t_blog b, t_type t where b.type_id = t.id /*博客类型id=类型id*/ LIMIT ?, ? 
2022-05-03 16:18:06.427 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.BlogDao.getAllBlog          : ==> Parameters: 5(Integer), 5(Integer)
2022-05-03 16:18:06.429 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.BlogDao.getAllBlog          : <==      Total: 5
2022-05-03 16:18:06.431 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type 
2022-05-03 16:18:06.431 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 
2022-05-03 16:18:06.432 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:18:06.433 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.TagDao.getAllTag            : ==>  Preparing: select * from blog.t_tag 
2022-05-03 16:18:06.433 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.TagDao.getAllTag            : ==> Parameters: 
2022-05-03 16:18:06.434 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.TagDao.getAllTag            : <==      Total: 7
2022-05-03 16:18:24.941 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TypeDao.getAllType_COUNT    : ==>  Preparing: SELECT count(0) FROM t_type 
2022-05-03 16:18:24.942 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TypeDao.getAllType_COUNT    : ==> Parameters: 
2022-05-03 16:18:24.944 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TypeDao.getAllType_COUNT    : <==      Total: 1
2022-05-03 16:18:24.944 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type LIMIT ? 
2022-05-03 16:18:24.944 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 5(Integer)
2022-05-03 16:18:24.945 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:18:28.335 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TagDao.getAllTag_COUNT      : ==>  Preparing: SELECT count(0) FROM blog.t_tag 
2022-05-03 16:18:28.335 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TagDao.getAllTag_COUNT      : ==> Parameters: 
2022-05-03 16:18:28.336 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TagDao.getAllTag_COUNT      : <==      Total: 1
2022-05-03 16:18:28.336 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TagDao.getAllTag            : ==>  Preparing: select * from blog.t_tag LIMIT ? 
2022-05-03 16:18:28.336 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TagDao.getAllTag            : ==> Parameters: 5(Integer)
2022-05-03 16:18:28.336 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TagDao.getAllTag            : <==      Total: 5
2022-05-03 16:18:29.506 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TypeDao.getAllType_COUNT    : ==>  Preparing: SELECT count(0) FROM t_type 
2022-05-03 16:18:29.506 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TypeDao.getAllType_COUNT    : ==> Parameters: 
2022-05-03 16:18:29.507 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TypeDao.getAllType_COUNT    : <==      Total: 1
2022-05-03 16:18:29.507 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type LIMIT ? 
2022-05-03 16:18:29.507 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 5(Integer)
2022-05-03 16:18:29.508 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:18:31.249 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TagDao.getAllTag_COUNT      : ==>  Preparing: SELECT count(0) FROM blog.t_tag 
2022-05-03 16:18:31.250 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TagDao.getAllTag_COUNT      : ==> Parameters: 
2022-05-03 16:18:31.250 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TagDao.getAllTag_COUNT      : <==      Total: 1
2022-05-03 16:18:31.251 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TagDao.getAllTag            : ==>  Preparing: select * from blog.t_tag LIMIT ? 
2022-05-03 16:18:31.251 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TagDao.getAllTag            : ==> Parameters: 5(Integer)
2022-05-03 16:18:31.251 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TagDao.getAllTag            : <==      Total: 5
2022-05-03 16:18:32.153 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.TypeDao.getAllType_COUNT    : ==>  Preparing: SELECT count(0) FROM t_type 
2022-05-03 16:18:32.153 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.TypeDao.getAllType_COUNT    : ==> Parameters: 
2022-05-03 16:18:32.154 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.TypeDao.getAllType_COUNT    : <==      Total: 1
2022-05-03 16:18:32.154 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type LIMIT ? 
2022-05-03 16:18:32.154 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 5(Integer)
2022-05-03 16:18:32.154 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:18:52.155 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.TypeDao.getTypeByName       : ==>  Preparing: select * from blog.t_type where name = ? 
2022-05-03 16:18:52.155 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.TypeDao.getTypeByName       : ==> Parameters: 学习方法(String)
2022-05-03 16:18:52.156 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.TypeDao.getTypeByName       : <==      Total: 1
2022-05-03 16:19:06.880 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.BlogDao.getBlogByTypeId     : ==>  Preparing: select b.* from t_blog b where b.type_id = ? 
2022-05-03 16:19:06.880 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.BlogDao.getBlogByTypeId     : ==> Parameters: 1(Long)
2022-05-03 16:19:06.884 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.BlogDao.getBlogByTypeId     : <==      Total: 5
2022-05-03 16:19:06.889 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getAllType_COUNT    : ==>  Preparing: SELECT count(0) FROM t_type 
2022-05-03 16:19:06.889 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getAllType_COUNT    : ==> Parameters: 
2022-05-03 16:19:06.890 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getAllType_COUNT    : <==      Total: 1
2022-05-03 16:19:06.890 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type LIMIT ? 
2022-05-03 16:19:06.891 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 5(Integer)
2022-05-03 16:19:06.892 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:19:12.106 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.getTypeByName       : ==>  Preparing: select * from blog.t_type where name = ? 
2022-05-03 16:19:12.107 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.getTypeByName       : ==> Parameters: 1111111(String)
2022-05-03 16:19:12.107 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.getTypeByName       : <==      Total: 0
2022-05-03 16:19:12.109 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.saveType            : ==>  Preparing: insert into blog.t_type values (?,?); 
2022-05-03 16:19:12.109 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.saveType            : ==> Parameters: null, 1111111(String)
2022-05-03 16:19:12.173 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.saveType            : <==    Updates: 1
2022-05-03 16:19:12.391 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getAllType_COUNT    : ==>  Preparing: SELECT count(0) FROM t_type 
2022-05-03 16:19:12.391 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getAllType_COUNT    : ==> Parameters: 
2022-05-03 16:19:12.391 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getAllType_COUNT    : <==      Total: 1
2022-05-03 16:19:12.392 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type LIMIT ? 
2022-05-03 16:19:12.392 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 5(Integer)
2022-05-03 16:19:12.393 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getAllType          : <==      Total: 5
2022-05-03 16:19:13.695 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.BlogDao.getBlogByTypeId     : ==>  Preparing: select b.* from t_blog b where b.type_id = ? 
2022-05-03 16:19:13.696 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.BlogDao.getBlogByTypeId     : ==> Parameters: 8(Long)
2022-05-03 16:19:13.697 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.BlogDao.getBlogByTypeId     : <==      Total: 0
2022-05-03 16:19:13.698 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.TypeDao.deleteType          : ==>  Preparing: delete from blog.t_type where id = ? 
2022-05-03 16:19:13.698 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.TypeDao.deleteType          : ==> Parameters: 8(Long)
2022-05-03 16:19:13.932 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.TypeDao.deleteType          : <==    Updates: 1
2022-05-03 16:19:14.016 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getAllType_COUNT    : ==>  Preparing: SELECT count(0) FROM t_type 
2022-05-03 16:19:14.016 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getAllType_COUNT    : ==> Parameters: 
2022-05-03 16:19:14.017 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getAllType_COUNT    : <==      Total: 1
2022-05-03 16:19:14.018 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type LIMIT ? 
2022-05-03 16:19:14.018 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 5(Integer)
2022-05-03 16:19:14.018 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:21:08.141 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id 
2022-05-03 16:21:08.141 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==> Parameters: 
2022-05-03 16:21:08.143 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.BlogDao.getAllBlog_COUNT    : <==      Total: 1
2022-05-03 16:21:08.143 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.BlogDao.getAllBlog          : ==>  Preparing: /*后台博客展示*/ select b.id bId , b.title title, b.update_time updateTime, b.recommend recommend, b.published published, b.type_id typeId, t.id tId , t.name name from t_blog b, t_type t where b.type_id = t.id /*博客类型id=类型id*/ LIMIT ? 
2022-05-03 16:21:08.144 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.BlogDao.getAllBlog          : ==> Parameters: 5(Integer)
2022-05-03 16:21:08.145 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.BlogDao.getAllBlog          : <==      Total: 5
2022-05-03 16:21:08.146 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type 
2022-05-03 16:21:08.146 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 
2022-05-03 16:21:08.147 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:21:08.148 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.TagDao.getAllTag            : ==>  Preparing: select * from blog.t_tag 
2022-05-03 16:21:08.148 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.TagDao.getAllTag            : ==> Parameters: 
2022-05-03 16:21:08.148 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.TagDao.getAllTag            : <==      Total: 7
2022-05-03 16:21:11.163 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.BlogDao.getBlog             : ==>  Preparing: /*后台展示博客*/ select b.id, b.published, b.flag, b.title, b.content, b.type_id, b.tag_ids, b.first_picture, b.description, b.recommend, b.share_statement, b.appreciation, b.commentabled from t_blog b where b.id = ?; 
2022-05-03 16:21:11.163 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.BlogDao.getBlog             : ==> Parameters: 5(Long)
2022-05-03 16:21:11.165 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.BlogDao.getBlog             : <==      Total: 1
2022-05-03 16:21:11.167 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type 
2022-05-03 16:21:11.167 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 
2022-05-03 16:21:11.168 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:21:11.170 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TagDao.getAllTag            : ==>  Preparing: select * from blog.t_tag 
2022-05-03 16:21:11.170 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TagDao.getAllTag            : ==> Parameters: 
2022-05-03 16:21:11.171 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TagDao.getAllTag            : <==      Total: 7
2022-05-03 16:25:10.993 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id 
2022-05-03 16:25:10.994 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==> Parameters: 
2022-05-03 16:25:10.995 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getAllBlog_COUNT    : <==      Total: 1
2022-05-03 16:25:10.996 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getAllBlog          : ==>  Preparing: /*后台博客展示*/ select b.id bId , b.title title, b.update_time updateTime, b.recommend recommend, b.published published, b.type_id typeId, t.id tId , t.name name from t_blog b, t_type t where b.type_id = t.id /*博客类型id=类型id*/ LIMIT ? 
2022-05-03 16:25:10.996 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getAllBlog          : ==> Parameters: 5(Integer)
2022-05-03 16:25:10.997 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getAllBlog          : <==      Total: 5
2022-05-03 16:25:10.998 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type 
2022-05-03 16:25:10.999 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 
2022-05-03 16:25:10.999 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:25:11.001 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TagDao.getAllTag            : ==>  Preparing: select * from blog.t_tag 
2022-05-03 16:25:11.001 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TagDao.getAllTag            : ==> Parameters: 
2022-05-03 16:25:11.002 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TagDao.getAllTag            : <==      Total: 7
2022-05-03 16:25:34.500 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type 
2022-05-03 16:25:34.501 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 
2022-05-03 16:25:34.501 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:25:34.503 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TagDao.getAllTag            : ==>  Preparing: select * from blog.t_tag 
2022-05-03 16:25:34.503 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TagDao.getAllTag            : ==> Parameters: 
2022-05-03 16:25:34.503 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TagDao.getAllTag            : <==      Total: 7
2022-05-03 16:26:11.948 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id 
2022-05-03 16:26:11.949 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==> Parameters: 
2022-05-03 16:26:11.950 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.BlogDao.getAllBlog_COUNT    : <==      Total: 1
2022-05-03 16:26:11.950 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.BlogDao.getAllBlog          : ==>  Preparing: /*后台博客展示*/ select b.id bId , b.title title, b.update_time updateTime, b.recommend recommend, b.published published, b.type_id typeId, t.id tId , t.name name from t_blog b, t_type t where b.type_id = t.id /*博客类型id=类型id*/ LIMIT ? 
2022-05-03 16:26:11.951 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.BlogDao.getAllBlog          : ==> Parameters: 5(Integer)
2022-05-03 16:26:11.952 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.BlogDao.getAllBlog          : <==      Total: 5
2022-05-03 16:26:11.954 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type 
2022-05-03 16:26:11.954 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 
2022-05-03 16:26:11.955 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:26:11.956 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TagDao.getAllTag            : ==>  Preparing: select * from blog.t_tag 
2022-05-03 16:26:11.956 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TagDao.getAllTag            : ==> Parameters: 
2022-05-03 16:26:11.957 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TagDao.getAllTag            : <==      Total: 7
2022-05-03 16:26:26.206 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.getAllType_COUNT    : ==>  Preparing: SELECT count(0) FROM t_type 
2022-05-03 16:26:26.206 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.getAllType_COUNT    : ==> Parameters: 
2022-05-03 16:26:26.207 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.getAllType_COUNT    : <==      Total: 1
2022-05-03 16:26:26.208 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type LIMIT ? 
2022-05-03 16:26:26.208 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 5(Integer)
2022-05-03 16:26:26.209 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:26:27.862 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.TagDao.getAllTag_COUNT      : ==>  Preparing: SELECT count(0) FROM blog.t_tag 
2022-05-03 16:26:27.862 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.TagDao.getAllTag_COUNT      : ==> Parameters: 
2022-05-03 16:26:27.863 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.TagDao.getAllTag_COUNT      : <==      Total: 1
2022-05-03 16:26:27.864 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.TagDao.getAllTag            : ==>  Preparing: select * from blog.t_tag LIMIT ? 
2022-05-03 16:26:27.864 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.TagDao.getAllTag            : ==> Parameters: 5(Integer)
2022-05-03 16:26:27.864 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.TagDao.getAllTag            : <==      Total: 5
2022-05-03 16:26:28.694 DEBUG 12064 --- [http-nio-8080-exec-2] com.blog.dao.TypeDao.getAllType_COUNT    : ==>  Preparing: SELECT count(0) FROM t_type 
2022-05-03 16:26:28.694 DEBUG 12064 --- [http-nio-8080-exec-2] com.blog.dao.TypeDao.getAllType_COUNT    : ==> Parameters: 
2022-05-03 16:26:28.695 DEBUG 12064 --- [http-nio-8080-exec-2] com.blog.dao.TypeDao.getAllType_COUNT    : <==      Total: 1
2022-05-03 16:26:28.695 DEBUG 12064 --- [http-nio-8080-exec-2] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type LIMIT ? 
2022-05-03 16:26:28.695 DEBUG 12064 --- [http-nio-8080-exec-2] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 5(Integer)
2022-05-03 16:26:28.697 DEBUG 12064 --- [http-nio-8080-exec-2] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:27:23.615 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.TypeDao.getTypeByName       : ==>  Preparing: select * from blog.t_type where name = ? 
2022-05-03 16:27:23.616 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.TypeDao.getTypeByName       : ==> Parameters: 学习方法(String)
2022-05-03 16:27:23.617 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.TypeDao.getTypeByName       : <==      Total: 1
2022-05-03 16:47:32.607 DEBUG 12064 --- [http-nio-8080-exec-8] c.b.d.U.queryByUsernameAndPassword       : ==>  Preparing: select * from blog.t_user where username = ? and password = ?; 
2022-05-03 16:47:32.611 DEBUG 12064 --- [http-nio-8080-exec-8] c.b.d.U.queryByUsernameAndPassword       : ==> Parameters: admin(String), e10adc3949ba59abbe56e057f20f883e(String)
2022-05-03 16:47:32.620 DEBUG 12064 --- [http-nio-8080-exec-8] c.b.d.U.queryByUsernameAndPassword       : <==      Total: 1
2022-05-03 16:47:39.910 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id 
2022-05-03 16:47:39.910 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==> Parameters: 
2022-05-03 16:47:39.916 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getAllBlog_COUNT    : <==      Total: 1
2022-05-03 16:47:39.916 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getAllBlog          : ==>  Preparing: /*后台博客展示*/ select b.id bId , b.title title, b.update_time updateTime, b.recommend recommend, b.published published, b.type_id typeId, t.id tId , t.name name from t_blog b, t_type t where b.type_id = t.id /*博客类型id=类型id*/ LIMIT ? 
2022-05-03 16:47:39.916 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getAllBlog          : ==> Parameters: 5(Integer)
2022-05-03 16:47:39.917 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getAllBlog          : <==      Total: 5
2022-05-03 16:47:39.919 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type 
2022-05-03 16:47:39.919 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 
2022-05-03 16:47:39.919 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:47:39.920 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TagDao.getAllTag            : ==>  Preparing: select * from blog.t_tag 
2022-05-03 16:47:39.920 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TagDao.getAllTag            : ==> Parameters: 
2022-05-03 16:47:39.922 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TagDao.getAllTag            : <==      Total: 7
2022-05-03 16:47:53.033 DEBUG 12064 --- [http-nio-8080-exec-2] com.blog.dao.BlogDao.deleteBlog          : ==>  Preparing: delete from t_blog where id = ? 
2022-05-03 16:47:53.034 DEBUG 12064 --- [http-nio-8080-exec-2] com.blog.dao.BlogDao.deleteBlog          : ==> Parameters: 1(Long)
2022-05-03 16:47:53.209 DEBUG 12064 --- [http-nio-8080-exec-2] com.blog.dao.BlogDao.deleteBlog          : <==    Updates: 1
2022-05-03 16:47:53.213 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id 
2022-05-03 16:47:53.213 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==> Parameters: 
2022-05-03 16:47:53.213 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getAllBlog_COUNT    : <==      Total: 1
2022-05-03 16:47:53.214 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getAllBlog          : ==>  Preparing: /*后台博客展示*/ select b.id bId , b.title title, b.update_time updateTime, b.recommend recommend, b.published published, b.type_id typeId, t.id tId , t.name name from t_blog b, t_type t where b.type_id = t.id /*博客类型id=类型id*/ LIMIT ? 
2022-05-03 16:47:53.214 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getAllBlog          : ==> Parameters: 5(Integer)
2022-05-03 16:47:53.214 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getAllBlog          : <==      Total: 5
2022-05-03 16:47:53.215 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type 
2022-05-03 16:47:53.215 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 
2022-05-03 16:47:53.215 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:47:53.216 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TagDao.getAllTag            : ==>  Preparing: select * from blog.t_tag 
2022-05-03 16:47:53.216 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TagDao.getAllTag            : ==> Parameters: 
2022-05-03 16:47:53.217 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TagDao.getAllTag            : <==      Total: 7
2022-05-03 16:47:58.899 DEBUG 12064 --- [http-nio-8080-exec-5] c.blog.dao.BlogDao.searchAllBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id WHERE b.title LIKE ? 
2022-05-03 16:47:58.899 DEBUG 12064 --- [http-nio-8080-exec-5] c.blog.dao.BlogDao.searchAllBlog_COUNT   : ==> Parameters: %s%(String)
2022-05-03 16:47:58.931 DEBUG 12064 --- [http-nio-8080-exec-5] c.blog.dao.BlogDao.searchAllBlog_COUNT   : <==      Total: 1
2022-05-03 16:47:58.932 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.BlogDao.searchAllBlog       : ==>  Preparing: select b.id bId , b.title title, b.update_time updateTime, b.recommend recommend, b.published published, b.type_id typeId, t.id tId , t.name name from t_blog b inner join t_type t on b.type_id = t.id WHERE b.title like ? LIMIT ? 
2022-05-03 16:47:58.932 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.BlogDao.searchAllBlog       : ==> Parameters: %s%(String), 5(Integer)
2022-05-03 16:47:58.933 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.BlogDao.searchAllBlog       : <==      Total: 4
2022-05-03 16:47:58.934 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type 
2022-05-03 16:47:58.934 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 
2022-05-03 16:47:58.934 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:47:58.935 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TagDao.getAllTag            : ==>  Preparing: select * from blog.t_tag 
2022-05-03 16:47:58.935 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TagDao.getAllTag            : ==> Parameters: 
2022-05-03 16:47:58.936 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TagDao.getAllTag            : <==      Total: 7
2022-05-03 16:48:07.111 DEBUG 12064 --- [http-nio-8080-exec-4] c.blog.dao.BlogDao.searchAllBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM t_blog b INNER JOIN t_type t ON b.type_id = t.id WHERE b.type_id = ? AND b.title LIKE ? 
2022-05-03 16:48:07.112 DEBUG 12064 --- [http-nio-8080-exec-4] c.blog.dao.BlogDao.searchAllBlog_COUNT   : ==> Parameters: 1(Long), %%(String)
2022-05-03 16:48:07.112 DEBUG 12064 --- [http-nio-8080-exec-4] c.blog.dao.BlogDao.searchAllBlog_COUNT   : <==      Total: 1
2022-05-03 16:48:07.113 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.BlogDao.searchAllBlog       : ==>  Preparing: select b.id bId , b.title title, b.update_time updateTime, b.recommend recommend, b.published published, b.type_id typeId, t.id tId , t.name name from t_blog b inner join t_type t on b.type_id = t.id WHERE b.type_id = ? and b.title like ? LIMIT ? 
2022-05-03 16:48:07.113 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.BlogDao.searchAllBlog       : ==> Parameters: 1(Long), %%(String), 5(Integer)
2022-05-03 16:48:07.114 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.BlogDao.searchAllBlog       : <==      Total: 5
2022-05-03 16:48:07.115 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type 
2022-05-03 16:48:07.115 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 
2022-05-03 16:48:07.116 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:48:07.116 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TagDao.getAllTag            : ==>  Preparing: select * from blog.t_tag 
2022-05-03 16:48:07.117 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TagDao.getAllTag            : ==> Parameters: 
2022-05-03 16:48:07.117 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TagDao.getAllTag            : <==      Total: 7
2022-05-03 16:48:21.023 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.BlogDao.getBlog             : ==>  Preparing: /*后台展示博客*/ select b.id, b.published, b.flag, b.title, b.content, b.type_id, b.tag_ids, b.first_picture, b.description, b.recommend, b.share_statement, b.appreciation, b.commentabled from t_blog b where b.id = ?; 
2022-05-03 16:48:21.023 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.BlogDao.getBlog             : ==> Parameters: 3(Long)
2022-05-03 16:48:21.025 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.BlogDao.getBlog             : <==      Total: 1
2022-05-03 16:48:21.027 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type 
2022-05-03 16:48:21.028 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 
2022-05-03 16:48:21.028 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:48:21.031 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TagDao.getAllTag            : ==>  Preparing: select * from blog.t_tag 
2022-05-03 16:48:21.032 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TagDao.getAllTag            : ==> Parameters: 
2022-05-03 16:48:21.032 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TagDao.getAllTag            : <==      Total: 7
2022-05-03 16:48:52.646 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.TypeDao.getType             : ==>  Preparing: select id,name from blog.t_type where id = ? 
2022-05-03 16:48:52.646 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.TypeDao.getType             : ==> Parameters: 1(Long)
2022-05-03 16:48:52.647 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.TypeDao.getType             : <==      Total: 1
2022-05-03 16:48:52.649 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.TagDao.getTag               : ==>  Preparing: select id,name from blog.t_tag where id = ? 
2022-05-03 16:48:52.649 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.TagDao.getTag               : ==> Parameters: 5(Long)
2022-05-03 16:48:52.650 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.TagDao.getTag               : <==      Total: 1
2022-05-03 16:48:52.651 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.TagDao.getTag               : ==>  Preparing: select id,name from blog.t_tag where id = ? 
2022-05-03 16:48:52.651 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.TagDao.getTag               : ==> Parameters: 4(Long)
2022-05-03 16:48:52.653 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.TagDao.getTag               : <==      Total: 1
2022-05-03 16:48:52.655 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.BlogDao.saveBlogAndTag      : ==>  Preparing: insert into t_blog_tags (tag_id, blog_id) values (?,?); 
2022-05-03 16:48:52.656 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.BlogDao.saveBlogAndTag      : ==> Parameters: 5(Long), 3(Long)
2022-05-03 16:48:52.776 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.BlogDao.saveBlogAndTag      : <==    Updates: 1
2022-05-03 16:48:52.776 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.BlogDao.saveBlogAndTag      : ==>  Preparing: insert into t_blog_tags (tag_id, blog_id) values (?,?); 
2022-05-03 16:48:52.776 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.BlogDao.saveBlogAndTag      : ==> Parameters: 4(Long), 3(Long)
2022-05-03 16:48:52.854 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.BlogDao.saveBlogAndTag      : <==    Updates: 1
2022-05-03 16:48:52.855 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.BlogDao.updateBlog          : ==>  Preparing: update t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, tag_ids = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2022-05-03 16:48:52.856 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.BlogDao.updateBlog          : ==> Parameters: true(Boolean), 原创(String), Springboot中PageHelper 分页查询使用方法(String), ### 一：导入依

```java
<dependency>
	<groupId>com.github.pagehelper</groupId>
	<artifactId>pagehelper-spring-boot-starter</artifactId>
	<version>1.2.13</version>
</dependency>
```
### 二：配置yml文件中PageHelper的属性

```java
pagehelper:                #分页插件
  helper-dialect: mysql
  reasonable: true
  support-methods-arguments: true
  params:
```
### 三：在controller类中使用，
##### 1.在查询方法上调用PageHelper.startPage()方法，设置分页的页数和每页信息数，
##### 2.将查询出来的结果集用PageInfo的构造函数初始化为一个分页结果对象
##### 3.将分页结果对象存入model，返回前端页面
```java
@GetMapping("/types")
public String types(@RequestParam(required = false,defaultValue = "1",value = "pagenum")int pagenum, Model model){

    PageHelper.startPage(pagenum, 5);  //pagenum：页数，pagesize:每页的信息数
    
    List<Type> allType = typeService.getAllType(); //调用业务层查询方法
    
    PageInfo<Type> pageInfo = new PageInfo<>(allType); //得到分页结果对象
    
    model.addAttribute("pageInfo", pageInfo);  //携带分页结果信息
    
    return "admin/types";  //回到前端展示页面
}
```
### 四：前端展示分页（thymeleaf+semantic-ui）,这里ui用自己的就行，比如bootstrap或layui，主要是thymeleaf的使用。

```java
<table  class="ui compact celled teal table">
  <thead>
  <tr>
    <th></th>
    <th>名称</th>
    <th>操作</th>
  </tr>
  </thead>
  <tbody>
  <tr th:each="type, iterStat : ${pageInfo.list}">
    <td th:text="${iterStat.count}">1</td>
    <td th:text="${type.name}">摸鱼方法</td>
    <td>
      <a href="#" th:href="@{/admin/types/{id}/input(id=${type.id})}" class="ui mini teal basic button">编辑</a>
      <a href="#" th:href="@{/admin/types/{id}/delete(id=${type.id})}" class="ui mini red basic button">删除</a>
    </td>
  </tr>
  </tbody>
  <tfoot>
  <tr>
    <th colspan="7">
      <div class="ui mini pagination menu"  >
        <div class="item"><a th:href="@{/admin/types}">首页</a></div>
        <div class="item"><a th:href="@{/admin/types(pagenum=${pageInfo.hasPreviousPage}?${pageInfo.prePage}:1)}">上一页</a></div>
        <div class="item"><a th:href="@{/admin/types(pagenum=${pageInfo.hasNextPage}?${pageInfo.nextPage}:${pageInfo.pages})}">下一页</a></div>
        <div class="item"><a th:href="@{/admin/types(pagenum=${pageInfo.pages})}">尾页</a></div>
      </div>
      <a href="#" th:href="@{/admin/types/input}" class="ui mini right floated teal basic button">新增</a>
    </th>
  </tr>
  </tfoot>
</table>

<div class="ui segment m-inline-block">
  <p >当前第<span th:text="${pageInfo.pageNum}"></span>页，总<span th:text="${pageInfo.pages}"></span>页，共<span th:text="${pageInfo.total}"></span>条记录</p>
</div>
```
### 五：效果展示（pagesize设置为5的效果）
![在这里插入图片描述](https://img-blog.csdnimg.cn/20200310105006168.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyODA0NzM2,size_16,color_FFFFFF,t_70)
(String), 1(Long), 5,4(String), 44,44(String), 1.在查询方法上调用PageHelper.startPage()方法，设置分页的页数和每页信息数，
2.将查询出来的结果集用PageInfo的构造函数初始化为一个分页结果对象
3.将分页结果对象存入model，返回前端页面(String), true(Boolean), false(Boolean), true(Boolean), true(Boolean), 2022-05-03 16:48:52.655(Timestamp), 3(Long)
2022-05-03 16:48:52.959 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.BlogDao.updateBlog          : <==    Updates: 1
2022-05-03 16:48:52.962 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id 
2022-05-03 16:48:52.962 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==> Parameters: 
2022-05-03 16:48:52.963 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.BlogDao.getAllBlog_COUNT    : <==      Total: 1
2022-05-03 16:48:52.963 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.BlogDao.getAllBlog          : ==>  Preparing: /*后台博客展示*/ select b.id bId , b.title title, b.update_time updateTime, b.recommend recommend, b.published published, b.type_id typeId, t.id tId , t.name name from t_blog b, t_type t where b.type_id = t.id /*博客类型id=类型id*/ LIMIT ? 
2022-05-03 16:48:52.963 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.BlogDao.getAllBlog          : ==> Parameters: 5(Integer)
2022-05-03 16:48:52.964 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.BlogDao.getAllBlog          : <==      Total: 5
2022-05-03 16:48:52.965 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type 
2022-05-03 16:48:52.965 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 
2022-05-03 16:48:52.965 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:48:52.966 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TagDao.getAllTag            : ==>  Preparing: select * from blog.t_tag 
2022-05-03 16:48:52.966 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TagDao.getAllTag            : ==> Parameters: 
2022-05-03 16:48:52.966 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TagDao.getAllTag            : <==      Total: 7
2022-05-03 16:48:56.384 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getAllType_COUNT    : ==>  Preparing: SELECT count(0) FROM t_type 
2022-05-03 16:48:56.384 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getAllType_COUNT    : ==> Parameters: 
2022-05-03 16:48:56.385 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getAllType_COUNT    : <==      Total: 1
2022-05-03 16:48:56.385 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type LIMIT ? 
2022-05-03 16:48:56.386 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 5(Integer)
2022-05-03 16:48:56.387 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:48:58.712 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.TagDao.getAllTag_COUNT      : ==>  Preparing: SELECT count(0) FROM blog.t_tag 
2022-05-03 16:48:58.712 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.TagDao.getAllTag_COUNT      : ==> Parameters: 
2022-05-03 16:48:58.713 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.TagDao.getAllTag_COUNT      : <==      Total: 1
2022-05-03 16:48:58.714 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.TagDao.getAllTag            : ==>  Preparing: select * from blog.t_tag LIMIT ? 
2022-05-03 16:48:58.714 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.TagDao.getAllTag            : ==> Parameters: 5(Integer)
2022-05-03 16:48:58.715 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.TagDao.getAllTag            : <==      Total: 5
2022-05-03 16:48:59.688 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.getAllType_COUNT    : ==>  Preparing: SELECT count(0) FROM t_type 
2022-05-03 16:48:59.688 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.getAllType_COUNT    : ==> Parameters: 
2022-05-03 16:48:59.689 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.getAllType_COUNT    : <==      Total: 1
2022-05-03 16:48:59.690 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type LIMIT ? 
2022-05-03 16:48:59.690 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 5(Integer)
2022-05-03 16:48:59.691 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:49:07.783 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.BlogDao.getBlogByTypeId     : ==>  Preparing: select b.* from t_blog b where b.type_id = ? 
2022-05-03 16:49:07.784 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.BlogDao.getBlogByTypeId     : ==> Parameters: 1(Long)
2022-05-03 16:49:07.789 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.BlogDao.getBlogByTypeId     : <==      Total: 5
2022-05-03 16:49:07.793 DEBUG 12064 --- [http-nio-8080-exec-2] com.blog.dao.TypeDao.getAllType_COUNT    : ==>  Preparing: SELECT count(0) FROM t_type 
2022-05-03 16:49:07.793 DEBUG 12064 --- [http-nio-8080-exec-2] com.blog.dao.TypeDao.getAllType_COUNT    : ==> Parameters: 
2022-05-03 16:49:07.794 DEBUG 12064 --- [http-nio-8080-exec-2] com.blog.dao.TypeDao.getAllType_COUNT    : <==      Total: 1
2022-05-03 16:49:07.794 DEBUG 12064 --- [http-nio-8080-exec-2] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type LIMIT ? 
2022-05-03 16:49:07.795 DEBUG 12064 --- [http-nio-8080-exec-2] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 5(Integer)
2022-05-03 16:49:07.795 DEBUG 12064 --- [http-nio-8080-exec-2] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:49:18.264 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TypeDao.getTypeByName       : ==>  Preparing: select * from blog.t_type where name = ? 
2022-05-03 16:49:18.264 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TypeDao.getTypeByName       : ==> Parameters: 学习方法(String)
2022-05-03 16:49:18.266 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TypeDao.getTypeByName       : <==      Total: 1
2022-05-03 16:49:29.616  INFO 12064 --- [http-nio-8080-exec-4] com.blog.aspect.LogAspect                : Request: LogAspect.RequestLog(url=http://localhost:8080/, ip=0:0:0:0:0:0:0:1, classMethod=com.blog.controller.IndexController.toIndex, args=[1, {}])
2022-05-03 16:49:29.619 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.BlogDao.getIndexBlog_COUNT  : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t, t_user u WHERE b.type_id = t.id AND u.id = b.user_id 
2022-05-03 16:49:29.619 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.BlogDao.getIndexBlog_COUNT  : ==> Parameters: 
2022-05-03 16:49:29.620 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.BlogDao.getIndexBlog_COUNT  : <==      Total: 1
2022-05-03 16:49:29.620 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.BlogDao.getIndexBlog        : ==>  Preparing: /*主页博客展示*/ select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name typename, t.id typeid, u.nickname, u.avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and u.id = b.user_id order by b.update_time desc LIMIT ? 
2022-05-03 16:49:29.620 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.BlogDao.getIndexBlog        : ==> Parameters: 8(Integer)
2022-05-03 16:49:29.627 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.BlogDao.getIndexBlog        : <==      Total: 8
2022-05-03 16:49:29.628 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TypeDao.getBlogType         : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title, b.type_id from t_type t, t_blog b where t.id = b.type_id 
2022-05-03 16:49:29.628 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TypeDao.getBlogType         : ==> Parameters: 
2022-05-03 16:49:29.629 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TypeDao.getBlogType         : <==      Total: 9
2022-05-03 16:49:29.630 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TagDao.getBlogTag           : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title from t_tag t, t_blog b, t_blog_tags bt where t.id = bt.tag_id and b.id = bt.blog_id 
2022-05-03 16:49:29.630 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TagDao.getBlogTag           : ==> Parameters: 
2022-05-03 16:49:29.631 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TagDao.getBlogTag           : <==      Total: 19
2022-05-03 16:49:29.632 DEBUG 12064 --- [http-nio-8080-exec-4] c.blog.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: select id, title, recommend from t_blog order by update_time desc; 
2022-05-03 16:49:29.632 DEBUG 12064 --- [http-nio-8080-exec-4] c.blog.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2022-05-03 16:49:29.633 DEBUG 12064 --- [http-nio-8080-exec-4] c.blog.dao.BlogDao.getAllRecommendBlog   : <==      Total: 9
2022-05-03 16:49:29.634  INFO 12064 --- [http-nio-8080-exec-4] com.blog.aspect.LogAspect                : ------------doAfter------------
2022-05-03 16:49:29.634  INFO 12064 --- [http-nio-8080-exec-4] com.blog.aspect.LogAspect                : Result: index
2022-05-03 16:50:05.467  INFO 12064 --- [http-nio-8080-exec-1] com.blog.aspect.LogAspect                : Request: LogAspect.RequestLog(url=http://localhost:8080/comments/3, ip=0:0:0:0:0:0:0:1, classMethod=com.blog.controller.CommentController.comments, args=[3, {}])
2022-05-03 16:50:05.477 DEBUG 12064 --- [http-nio-8080-exec-1] c.b.d.C.findByBlogIdAndParentCommentNull : ==>  Preparing: select c.id cid,c.nickname,c.email,c.content,c.avatar, c.create_time,c.blog_id,c.parent_comment_id from t_comment c, t_blog b where c.blog_id = b.id and c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2022-05-03 16:50:05.477 DEBUG 12064 --- [http-nio-8080-exec-1] c.b.d.C.findByBlogIdAndParentCommentNull : ==> Parameters: 3(Long), -1(Long)
2022-05-03 16:50:05.590 DEBUG 12064 --- [http-nio-8080-exec-1] c.b.d.C.findByBlogIdAndParentCommentNull : <==      Total: 2
2022-05-03 16:50:05.591 DEBUG 12064 --- [http-nio-8080-exec-1] com.blog.dao.BlogDao.getDetailedBlog     : ==>  Preparing: /*博客详情*/ select b.id, b.first_picture, b.flag, b.title, b.content, b.views, b.update_time,b.commentabled, b.share_statement, b.appreciation, u.nickname, u.avatar, tag.id tagid, tag.name tagname from t_blog b, t_user u, t_tag tag, t_blog_tags tb where b.user_id = u.id and tb.blog_id = b.id and tb.tag_id = tag.id and b.id = ? 
2022-05-03 16:50:05.591 DEBUG 12064 --- [http-nio-8080-exec-1] com.blog.dao.BlogDao.getDetailedBlog     : ==> Parameters: 3(Long)
2022-05-03 16:50:05.598 DEBUG 12064 --- [http-nio-8080-exec-1] com.blog.dao.BlogDao.getDetailedBlog     : <==      Total: 6
2022-05-03 16:50:05.759  INFO 12064 --- [http-nio-8080-exec-1] com.blog.aspect.LogAspect                : ------------doAfter------------
2022-05-03 16:50:05.759  INFO 12064 --- [http-nio-8080-exec-1] com.blog.aspect.LogAspect                : Result: blog
2022-05-03 16:50:06.001 ERROR 12064 --- [http-nio-8080-exec-6] c.b.handler.ControllerExceptionHandler   : Request url: /comments/44,44, Exception: {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "44,44"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:133) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) [spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) [spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) [spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) [tomcat-embed-websocket-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) [spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) [spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) [spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_281]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_281]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_281]
Caused by: java.lang.NumberFormatException: For input string: "44,44"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65) ~[na:1.8.0_281]
	at java.lang.Long.parseLong(Long.java:589) ~[na:1.8.0_281]
	at java.lang.Long.valueOf(Long.java:803) ~[na:1.8.0_281]
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:214) ~[spring-core-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693) ~[spring-context-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:125) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	... 47 common frames omitted

2022-05-03 16:50:06.002  WARN 12064 --- [http-nio-8080-exec-6] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "44,44"]
2022-05-03 16:50:11.425  INFO 12064 --- [http-nio-8080-exec-9] com.blog.aspect.LogAspect                : Request: LogAspect.RequestLog(url=http://localhost:8080/types/-1, ip=0:0:0:0:0:0:0:1, classMethod=com.blog.controller.TypeShowController.types, args=[-1, 1, {}])
2022-05-03 16:50:11.430 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.getBlogType_COUNT   : ==>  Preparing: SELECT count(0) FROM t_type t, t_blog b WHERE t.id = b.type_id 
2022-05-03 16:50:11.430 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.getBlogType_COUNT   : ==> Parameters: 
2022-05-03 16:50:11.431 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.getBlogType_COUNT   : <==      Total: 1
2022-05-03 16:50:11.431 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.getBlogType         : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title, b.type_id from t_type t, t_blog b where t.id = b.type_id LIMIT ? 
2022-05-03 16:50:11.431 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.getBlogType         : ==> Parameters: 100(Integer)
2022-05-03 16:50:11.432 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.getBlogType         : <==      Total: 9
2022-05-03 16:50:11.433 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name typename, t.id typeid, u.nickname, u.avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2022-05-03 16:50:11.434 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.BlogDao.getByTypeId         : ==> Parameters: 6(Long)
2022-05-03 16:50:11.438 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.BlogDao.getByTypeId         : <==      Total: 2
2022-05-03 16:50:11.438  INFO 12064 --- [http-nio-8080-exec-9] com.blog.aspect.LogAspect                : ------------doAfter------------
2022-05-03 16:50:11.438  INFO 12064 --- [http-nio-8080-exec-9] com.blog.aspect.LogAspect                : Result: types
2022-05-03 16:50:12.803  INFO 12064 --- [http-nio-8080-exec-8] com.blog.aspect.LogAspect                : Request: LogAspect.RequestLog(url=http://localhost:8080/tags/-1, ip=0:0:0:0:0:0:0:1, classMethod=com.blog.controller.TagShowController.types, args=[-1, 1, {}])
2022-05-03 16:50:12.809 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.TagDao.getBlogTag_COUNT     : ==>  Preparing: SELECT count(0) FROM t_tag t, t_blog b, t_blog_tags bt WHERE t.id = bt.tag_id AND b.id = bt.blog_id 
2022-05-03 16:50:12.809 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.TagDao.getBlogTag_COUNT     : ==> Parameters: 
2022-05-03 16:50:12.810 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.TagDao.getBlogTag_COUNT     : <==      Total: 1
2022-05-03 16:50:12.810 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.TagDao.getBlogTag           : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title from t_tag t, t_blog b, t_blog_tags bt where t.id = bt.tag_id and b.id = bt.blog_id LIMIT ? 
2022-05-03 16:50:12.810 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.TagDao.getBlogTag           : ==> Parameters: 100(Integer)
2022-05-03 16:50:12.813 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.TagDao.getBlogTag           : <==      Total: 19
2022-05-03 16:50:12.814 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.BlogDao.getByTagId          : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name typename, t.id typeid, t1.name tagname, t1.id tagid, u.nickname, u.avatar from t_blog b, t_type t, t_user u, t_blog_tags tb, t_tag t1 where b.type_id = t.id and u.id = b.user_id and tb.blog_id = b.id and tb.tag_id = t1.id and t1.id = ? order by b.update_time desc 
2022-05-03 16:50:12.814 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.BlogDao.getByTagId          : ==> Parameters: 3(Long)
2022-05-03 16:50:12.816 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.BlogDao.getByTagId          : <==      Total: 1
2022-05-03 16:50:12.820  INFO 12064 --- [http-nio-8080-exec-8] com.blog.aspect.LogAspect                : ------------doAfter------------
2022-05-03 16:50:12.820  INFO 12064 --- [http-nio-8080-exec-8] com.blog.aspect.LogAspect                : Result: tags
2022-05-03 16:50:16.242  INFO 12064 --- [http-nio-8080-exec-7] com.blog.aspect.LogAspect                : Request: LogAspect.RequestLog(url=http://localhost:8080/types/-1, ip=0:0:0:0:0:0:0:1, classMethod=com.blog.controller.TypeShowController.types, args=[-1, 1, {}])
2022-05-03 16:50:16.243 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getBlogType_COUNT   : ==>  Preparing: SELECT count(0) FROM t_type t, t_blog b WHERE t.id = b.type_id 
2022-05-03 16:50:16.244 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getBlogType_COUNT   : ==> Parameters: 
2022-05-03 16:50:16.245 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getBlogType_COUNT   : <==      Total: 1
2022-05-03 16:50:16.246 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getBlogType         : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title, b.type_id from t_type t, t_blog b where t.id = b.type_id LIMIT ? 
2022-05-03 16:50:16.246 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getBlogType         : ==> Parameters: 100(Integer)
2022-05-03 16:50:16.249 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getBlogType         : <==      Total: 9
2022-05-03 16:50:16.250 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name typename, t.id typeid, u.nickname, u.avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2022-05-03 16:50:16.251 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.BlogDao.getByTypeId         : ==> Parameters: 6(Long)
2022-05-03 16:50:16.252 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.BlogDao.getByTypeId         : <==      Total: 2
2022-05-03 16:50:16.253  INFO 12064 --- [http-nio-8080-exec-7] com.blog.aspect.LogAspect                : ------------doAfter------------
2022-05-03 16:50:16.253  INFO 12064 --- [http-nio-8080-exec-7] com.blog.aspect.LogAspect                : Result: types
2022-05-03 16:50:18.175  INFO 12064 --- [http-nio-8080-exec-10] com.blog.aspect.LogAspect                : Request: LogAspect.RequestLog(url=http://localhost:8080/types/1, ip=0:0:0:0:0:0:0:1, classMethod=com.blog.controller.TypeShowController.types, args=[1, 1, {}])
2022-05-03 16:50:18.177 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.TypeDao.getBlogType_COUNT   : ==>  Preparing: SELECT count(0) FROM t_type t, t_blog b WHERE t.id = b.type_id 
2022-05-03 16:50:18.177 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.TypeDao.getBlogType_COUNT   : ==> Parameters: 
2022-05-03 16:50:18.178 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.TypeDao.getBlogType_COUNT   : <==      Total: 1
2022-05-03 16:50:18.179 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.TypeDao.getBlogType         : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title, b.type_id from t_type t, t_blog b where t.id = b.type_id LIMIT ? 
2022-05-03 16:50:18.179 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.TypeDao.getBlogType         : ==> Parameters: 100(Integer)
2022-05-03 16:50:18.181 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.TypeDao.getBlogType         : <==      Total: 9
2022-05-03 16:50:18.183 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name typename, t.id typeid, u.nickname, u.avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2022-05-03 16:50:18.183 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.BlogDao.getByTypeId         : ==> Parameters: 1(Long)
2022-05-03 16:50:18.188 DEBUG 12064 --- [http-nio-8080-exec-10] com.blog.dao.BlogDao.getByTypeId         : <==      Total: 5
2022-05-03 16:50:18.188  INFO 12064 --- [http-nio-8080-exec-10] com.blog.aspect.LogAspect                : ------------doAfter------------
2022-05-03 16:50:18.188  INFO 12064 --- [http-nio-8080-exec-10] com.blog.aspect.LogAspect                : Result: types
2022-05-03 16:50:18.276 ERROR 12064 --- [http-nio-8080-exec-4] c.b.handler.ControllerExceptionHandler   : Request url: /types/1,1, Exception: {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "1,1"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:133) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) [spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) [spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) [spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) [tomcat-embed-websocket-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) [spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) [spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) [spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_281]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_281]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_281]
Caused by: java.lang.NumberFormatException: For input string: "1,1"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65) ~[na:1.8.0_281]
	at java.lang.Long.parseLong(Long.java:589) ~[na:1.8.0_281]
	at java.lang.Long.valueOf(Long.java:803) ~[na:1.8.0_281]
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:214) ~[spring-core-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693) ~[spring-context-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:125) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	... 47 common frames omitted

2022-05-03 16:50:18.277  WARN 12064 --- [http-nio-8080-exec-4] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "1,1"]
2022-05-03 16:50:18.277 ERROR 12064 --- [http-nio-8080-exec-10] c.b.handler.ControllerExceptionHandler   : Request url: /types/44,44, Exception: {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "44,44"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:133) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) [spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) [spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) [spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) [tomcat-embed-websocket-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) [spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) [spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) [spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_281]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_281]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_281]
Caused by: java.lang.NumberFormatException: For input string: "44,44"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65) ~[na:1.8.0_281]
	at java.lang.Long.parseLong(Long.java:589) ~[na:1.8.0_281]
	at java.lang.Long.valueOf(Long.java:803) ~[na:1.8.0_281]
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:214) ~[spring-core-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693) ~[spring-context-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:125) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	... 47 common frames omitted

2022-05-03 16:50:18.278  WARN 12064 --- [http-nio-8080-exec-10] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "44,44"]
2022-05-03 16:50:18.281 ERROR 12064 --- [http-nio-8080-exec-9] c.b.handler.ControllerExceptionHandler   : Request url: /types/%E6%97%A0,a%20g, Exception: {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "无,ag"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:133) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) [spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) [spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) [spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) [tomcat-embed-websocket-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) [spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) [spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) [spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_281]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_281]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_281]
Caused by: java.lang.NumberFormatException: For input string: "无,ag"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65) ~[na:1.8.0_281]
	at java.lang.Long.parseLong(Long.java:589) ~[na:1.8.0_281]
	at java.lang.Long.valueOf(Long.java:803) ~[na:1.8.0_281]
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:214) ~[spring-core-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693) ~[spring-context-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:125) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	... 47 common frames omitted

2022-05-03 16:50:18.282  WARN 12064 --- [http-nio-8080-exec-9] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "无,ag"]
2022-05-03 16:50:20.044  INFO 12064 --- [http-nio-8080-exec-1] com.blog.aspect.LogAspect                : Request: LogAspect.RequestLog(url=http://localhost:8080/types/5, ip=0:0:0:0:0:0:0:1, classMethod=com.blog.controller.TypeShowController.types, args=[5, 1, {}])
2022-05-03 16:50:20.046 DEBUG 12064 --- [http-nio-8080-exec-1] com.blog.dao.TypeDao.getBlogType_COUNT   : ==>  Preparing: SELECT count(0) FROM t_type t, t_blog b WHERE t.id = b.type_id 
2022-05-03 16:50:20.046 DEBUG 12064 --- [http-nio-8080-exec-1] com.blog.dao.TypeDao.getBlogType_COUNT   : ==> Parameters: 
2022-05-03 16:50:20.046 DEBUG 12064 --- [http-nio-8080-exec-1] com.blog.dao.TypeDao.getBlogType_COUNT   : <==      Total: 1
2022-05-03 16:50:20.046 DEBUG 12064 --- [http-nio-8080-exec-1] com.blog.dao.TypeDao.getBlogType         : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title, b.type_id from t_type t, t_blog b where t.id = b.type_id LIMIT ? 
2022-05-03 16:50:20.046 DEBUG 12064 --- [http-nio-8080-exec-1] com.blog.dao.TypeDao.getBlogType         : ==> Parameters: 100(Integer)
2022-05-03 16:50:20.047 DEBUG 12064 --- [http-nio-8080-exec-1] com.blog.dao.TypeDao.getBlogType         : <==      Total: 9
2022-05-03 16:50:20.048 DEBUG 12064 --- [http-nio-8080-exec-1] com.blog.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name typename, t.id typeid, u.nickname, u.avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2022-05-03 16:50:20.048 DEBUG 12064 --- [http-nio-8080-exec-1] com.blog.dao.BlogDao.getByTypeId         : ==> Parameters: 5(Long)
2022-05-03 16:50:20.048 DEBUG 12064 --- [http-nio-8080-exec-1] com.blog.dao.BlogDao.getByTypeId         : <==      Total: 1
2022-05-03 16:50:20.049  INFO 12064 --- [http-nio-8080-exec-1] com.blog.aspect.LogAspect                : ------------doAfter------------
2022-05-03 16:50:20.049  INFO 12064 --- [http-nio-8080-exec-1] com.blog.aspect.LogAspect                : Result: types
2022-05-03 16:50:22.425  INFO 12064 --- [http-nio-8080-exec-9] com.blog.aspect.LogAspect                : Request: LogAspect.RequestLog(url=http://localhost:8080/types/3, ip=0:0:0:0:0:0:0:1, classMethod=com.blog.controller.TypeShowController.types, args=[3, 1, {}])
2022-05-03 16:50:22.428 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.getBlogType_COUNT   : ==>  Preparing: SELECT count(0) FROM t_type t, t_blog b WHERE t.id = b.type_id 
2022-05-03 16:50:22.428 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.getBlogType_COUNT   : ==> Parameters: 
2022-05-03 16:50:22.429 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.getBlogType_COUNT   : <==      Total: 1
2022-05-03 16:50:22.430 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.getBlogType         : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title, b.type_id from t_type t, t_blog b where t.id = b.type_id LIMIT ? 
2022-05-03 16:50:22.430 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.getBlogType         : ==> Parameters: 100(Integer)
2022-05-03 16:50:22.431 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.getBlogType         : <==      Total: 9
2022-05-03 16:50:22.431 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name typename, t.id typeid, u.nickname, u.avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2022-05-03 16:50:22.431 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.BlogDao.getByTypeId         : ==> Parameters: 3(Long)
2022-05-03 16:50:22.432 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.BlogDao.getByTypeId         : <==      Total: 1
2022-05-03 16:50:22.434  INFO 12064 --- [http-nio-8080-exec-9] com.blog.aspect.LogAspect                : ------------doAfter------------
2022-05-03 16:50:22.435  INFO 12064 --- [http-nio-8080-exec-9] com.blog.aspect.LogAspect                : Result: types
2022-05-03 16:50:24.724  INFO 12064 --- [http-nio-8080-exec-8] com.blog.aspect.LogAspect                : Request: LogAspect.RequestLog(url=http://localhost:8080/blog/11, ip=0:0:0:0:0:0:0:1, classMethod=com.blog.controller.IndexController.toLogin, args=[11, {}])
2022-05-03 16:50:24.725 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.BlogDao.getDetailedBlog     : ==>  Preparing: /*博客详情*/ select b.id, b.first_picture, b.flag, b.title, b.content, b.views, b.update_time,b.commentabled, b.share_statement, b.appreciation, u.nickname, u.avatar, tag.id tagid, tag.name tagname from t_blog b, t_user u, t_tag tag, t_blog_tags tb where b.user_id = u.id and tb.blog_id = b.id and tb.tag_id = tag.id and b.id = ? 
2022-05-03 16:50:24.726 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.BlogDao.getDetailedBlog     : ==> Parameters: 11(Long)
2022-05-03 16:50:24.728 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2022-05-03 16:50:24.731  INFO 12064 --- [http-nio-8080-exec-8] com.blog.aspect.LogAspect                : ------------doAfter------------
2022-05-03 16:50:24.732  INFO 12064 --- [http-nio-8080-exec-8] com.blog.aspect.LogAspect                : Result: blog
2022-05-03 16:50:29.051  INFO 12064 --- [http-nio-8080-exec-3] com.blog.aspect.LogAspect                : Request: LogAspect.RequestLog(url=http://localhost:8080/archives, ip=0:0:0:0:0:0:0:1, classMethod=com.blog.controller.ArchiveShowController.archives, args=[{}])
2022-05-03 16:50:29.059 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.BlogDao.findGroupYear       : ==>  Preparing: select DATE_FORMAT(b.update_time, '%Y') from t_blog b order by b.update_time desc 
2022-05-03 16:50:29.059 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.BlogDao.findGroupYear       : ==> Parameters: 
2022-05-03 16:50:29.168 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.BlogDao.findGroupYear       : <==      Total: 9
2022-05-03 16:50:29.169 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.BlogDao.findByYear          : ==>  Preparing: select b.title, b.update_time, b.id, b.flag from t_blog b where DATE_FORMAT(b.update_time, "%Y") = ? 
2022-05-03 16:50:29.169 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.BlogDao.findByYear          : ==> Parameters: 2019(String)
2022-05-03 16:50:29.179 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.BlogDao.findByYear          : <==      Total: 1
2022-05-03 16:50:29.179 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.BlogDao.findByYear          : ==>  Preparing: select b.title, b.update_time, b.id, b.flag from t_blog b where DATE_FORMAT(b.update_time, "%Y") = ? 
2022-05-03 16:50:29.179 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.BlogDao.findByYear          : ==> Parameters: 2022(String)
2022-05-03 16:50:29.180 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.BlogDao.findByYear          : <==      Total: 3
2022-05-03 16:50:29.180 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.BlogDao.findByYear          : ==>  Preparing: select b.title, b.update_time, b.id, b.flag from t_blog b where DATE_FORMAT(b.update_time, "%Y") = ? 
2022-05-03 16:50:29.180 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.BlogDao.findByYear          : ==> Parameters: 2020(String)
2022-05-03 16:50:29.180 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.BlogDao.findByYear          : <==      Total: 5
2022-05-03 16:50:29.181 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.BlogDao.getAllBlog          : ==>  Preparing: /*后台博客展示*/ select b.id bId , b.title title, b.update_time updateTime, b.recommend recommend, b.published published, b.type_id typeId, t.id tId , t.name name from t_blog b, t_type t where b.type_id = t.id /*博客类型id=类型id*/ 
2022-05-03 16:50:29.181 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.BlogDao.getAllBlog          : ==> Parameters: 
2022-05-03 16:50:29.181 DEBUG 12064 --- [http-nio-8080-exec-3] com.blog.dao.BlogDao.getAllBlog          : <==      Total: 9
2022-05-03 16:50:29.182  INFO 12064 --- [http-nio-8080-exec-3] com.blog.aspect.LogAspect                : ------------doAfter------------
2022-05-03 16:50:29.182  INFO 12064 --- [http-nio-8080-exec-3] com.blog.aspect.LogAspect                : Result: archives
2022-05-03 16:50:38.766  INFO 12064 --- [http-nio-8080-exec-6] com.blog.aspect.LogAspect                : Request: LogAspect.RequestLog(url=http://localhost:8080/about, ip=0:0:0:0:0:0:0:1, classMethod=com.blog.controller.AboutShowController.about, args=[])
2022-05-03 16:50:38.770  INFO 12064 --- [http-nio-8080-exec-6] com.blog.aspect.LogAspect                : ------------doAfter------------
2022-05-03 16:50:38.770  INFO 12064 --- [http-nio-8080-exec-6] com.blog.aspect.LogAspect                : Result: about
2022-05-03 16:52:52.641 DEBUG 12064 --- [http-nio-8080-exec-5] c.b.d.U.queryByUsernameAndPassword       : ==>  Preparing: select * from blog.t_user where username = ? and password = ?; 
2022-05-03 16:52:52.641 DEBUG 12064 --- [http-nio-8080-exec-5] c.b.d.U.queryByUsernameAndPassword       : ==> Parameters: admin(String), e10adc3949ba59abbe56e057f20f883e(String)
2022-05-03 16:52:52.642 DEBUG 12064 --- [http-nio-8080-exec-5] c.b.d.U.queryByUsernameAndPassword       : <==      Total: 1
2022-05-03 16:52:54.403 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id 
2022-05-03 16:52:54.403 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==> Parameters: 
2022-05-03 16:52:54.403 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.BlogDao.getAllBlog_COUNT    : <==      Total: 1
2022-05-03 16:52:54.404 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.BlogDao.getAllBlog          : ==>  Preparing: /*后台博客展示*/ select b.id bId , b.title title, b.update_time updateTime, b.recommend recommend, b.published published, b.type_id typeId, t.id tId , t.name name from t_blog b, t_type t where b.type_id = t.id /*博客类型id=类型id*/ LIMIT ? 
2022-05-03 16:52:54.404 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.BlogDao.getAllBlog          : ==> Parameters: 5(Integer)
2022-05-03 16:52:54.404 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.BlogDao.getAllBlog          : <==      Total: 5
2022-05-03 16:52:54.405 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type 
2022-05-03 16:52:54.405 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 
2022-05-03 16:52:54.405 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:52:54.406 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TagDao.getAllTag            : ==>  Preparing: select * from blog.t_tag 
2022-05-03 16:52:54.406 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TagDao.getAllTag            : ==> Parameters: 
2022-05-03 16:52:54.406 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TagDao.getAllTag            : <==      Total: 7
2022-05-03 16:52:57.142 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type 
2022-05-03 16:52:57.142 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 
2022-05-03 16:52:57.143 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:52:57.145 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TagDao.getAllTag            : ==>  Preparing: select * from blog.t_tag 
2022-05-03 16:52:57.145 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TagDao.getAllTag            : ==> Parameters: 
2022-05-03 16:52:57.146 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TagDao.getAllTag            : <==      Total: 7
2022-05-03 16:54:41.878 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t WHERE b.type_id = t.id 
2022-05-03 16:54:41.878 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getAllBlog_COUNT    : ==> Parameters: 
2022-05-03 16:54:41.879 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getAllBlog_COUNT    : <==      Total: 1
2022-05-03 16:54:41.880 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getAllBlog          : ==>  Preparing: /*后台博客展示*/ select b.id bId , b.title title, b.update_time updateTime, b.recommend recommend, b.published published, b.type_id typeId, t.id tId , t.name name from t_blog b, t_type t where b.type_id = t.id /*博客类型id=类型id*/ LIMIT ? 
2022-05-03 16:54:41.880 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getAllBlog          : ==> Parameters: 5(Integer)
2022-05-03 16:54:41.881 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getAllBlog          : <==      Total: 5
2022-05-03 16:54:41.882 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type 
2022-05-03 16:54:41.883 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 
2022-05-03 16:54:41.883 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:54:41.885 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TagDao.getAllTag            : ==>  Preparing: select * from blog.t_tag 
2022-05-03 16:54:41.885 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TagDao.getAllTag            : ==> Parameters: 
2022-05-03 16:54:41.886 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TagDao.getAllTag            : <==      Total: 7
2022-05-03 16:54:50.427 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.TypeDao.getAllType_COUNT    : ==>  Preparing: SELECT count(0) FROM t_type 
2022-05-03 16:54:50.427 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.TypeDao.getAllType_COUNT    : ==> Parameters: 
2022-05-03 16:54:50.428 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.TypeDao.getAllType_COUNT    : <==      Total: 1
2022-05-03 16:54:50.428 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type LIMIT ? 
2022-05-03 16:54:50.428 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 5(Integer)
2022-05-03 16:54:50.429 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:54:51.137 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TagDao.getAllTag_COUNT      : ==>  Preparing: SELECT count(0) FROM blog.t_tag 
2022-05-03 16:54:51.137 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TagDao.getAllTag_COUNT      : ==> Parameters: 
2022-05-03 16:54:51.137 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TagDao.getAllTag_COUNT      : <==      Total: 1
2022-05-03 16:54:51.137 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TagDao.getAllTag            : ==>  Preparing: select * from blog.t_tag LIMIT ? 
2022-05-03 16:54:51.137 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TagDao.getAllTag            : ==> Parameters: 5(Integer)
2022-05-03 16:54:51.138 DEBUG 12064 --- [http-nio-8080-exec-4] com.blog.dao.TagDao.getAllTag            : <==      Total: 5
2022-05-03 16:54:53.025 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getAllType_COUNT    : ==>  Preparing: SELECT count(0) FROM t_type 
2022-05-03 16:54:53.025 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getAllType_COUNT    : ==> Parameters: 
2022-05-03 16:54:53.025 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getAllType_COUNT    : <==      Total: 1
2022-05-03 16:54:53.025 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type LIMIT ? 
2022-05-03 16:54:53.025 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 5(Integer)
2022-05-03 16:54:53.026 DEBUG 12064 --- [http-nio-8080-exec-7] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:55:04.326 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.BlogDao.getBlogByTypeId     : ==>  Preparing: select b.* from t_blog b where b.type_id = ? 
2022-05-03 16:55:04.326 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.BlogDao.getBlogByTypeId     : ==> Parameters: 1(Long)
2022-05-03 16:55:04.330 DEBUG 12064 --- [http-nio-8080-exec-8] com.blog.dao.BlogDao.getBlogByTypeId     : <==      Total: 5
2022-05-03 16:55:04.334 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getAllType_COUNT    : ==>  Preparing: SELECT count(0) FROM t_type 
2022-05-03 16:55:04.334 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getAllType_COUNT    : ==> Parameters: 
2022-05-03 16:55:04.334 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getAllType_COUNT    : <==      Total: 1
2022-05-03 16:55:04.335 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getAllType          : ==>  Preparing: select * from t_type LIMIT ? 
2022-05-03 16:55:04.335 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getAllType          : ==> Parameters: 5(Integer)
2022-05-03 16:55:04.335 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getAllType          : <==      Total: 4
2022-05-03 16:57:18.236  INFO 12064 --- [http-nio-8080-exec-6] com.blog.aspect.LogAspect                : Request: LogAspect.RequestLog(url=http://localhost:8080/, ip=0:0:0:0:0:0:0:1, classMethod=com.blog.controller.IndexController.toIndex, args=[1, {}])
2022-05-03 16:57:18.239 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getIndexBlog_COUNT  : ==>  Preparing: SELECT count(0) FROM t_blog b, t_type t, t_user u WHERE b.type_id = t.id AND u.id = b.user_id 
2022-05-03 16:57:18.239 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getIndexBlog_COUNT  : ==> Parameters: 
2022-05-03 16:57:18.241 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getIndexBlog_COUNT  : <==      Total: 1
2022-05-03 16:57:18.242 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getIndexBlog        : ==>  Preparing: /*主页博客展示*/ select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name typename, t.id typeid, u.nickname, u.avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and u.id = b.user_id order by b.update_time desc LIMIT ? 
2022-05-03 16:57:18.242 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getIndexBlog        : ==> Parameters: 8(Integer)
2022-05-03 16:57:18.244 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getIndexBlog        : <==      Total: 8
2022-05-03 16:57:18.245 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getBlogType         : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title, b.type_id from t_type t, t_blog b where t.id = b.type_id 
2022-05-03 16:57:18.245 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getBlogType         : ==> Parameters: 
2022-05-03 16:57:18.247 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getBlogType         : <==      Total: 9
2022-05-03 16:57:18.248 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TagDao.getBlogTag           : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title from t_tag t, t_blog b, t_blog_tags bt where t.id = bt.tag_id and b.id = bt.blog_id 
2022-05-03 16:57:18.248 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TagDao.getBlogTag           : ==> Parameters: 
2022-05-03 16:57:18.252 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TagDao.getBlogTag           : <==      Total: 19
2022-05-03 16:57:18.252 DEBUG 12064 --- [http-nio-8080-exec-6] c.blog.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: select id, title, recommend from t_blog order by update_time desc; 
2022-05-03 16:57:18.253 DEBUG 12064 --- [http-nio-8080-exec-6] c.blog.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2022-05-03 16:57:18.254 DEBUG 12064 --- [http-nio-8080-exec-6] c.blog.dao.BlogDao.getAllRecommendBlog   : <==      Total: 9
2022-05-03 16:57:18.255  INFO 12064 --- [http-nio-8080-exec-6] com.blog.aspect.LogAspect                : ------------doAfter------------
2022-05-03 16:57:18.255  INFO 12064 --- [http-nio-8080-exec-6] com.blog.aspect.LogAspect                : Result: index
2022-05-03 16:59:18.053  INFO 12064 --- [http-nio-8080-exec-1] com.blog.aspect.LogAspect                : Request: LogAspect.RequestLog(url=http://localhost:8080/types/-1, ip=0:0:0:0:0:0:0:1, classMethod=com.blog.controller.TypeShowController.types, args=[-1, 1, {}])
2022-05-03 16:59:18.055 DEBUG 12064 --- [http-nio-8080-exec-1] com.blog.dao.TypeDao.getBlogType_COUNT   : ==>  Preparing: SELECT count(0) FROM t_type t, t_blog b WHERE t.id = b.type_id 
2022-05-03 16:59:18.055 DEBUG 12064 --- [http-nio-8080-exec-1] com.blog.dao.TypeDao.getBlogType_COUNT   : ==> Parameters: 
2022-05-03 16:59:18.056 DEBUG 12064 --- [http-nio-8080-exec-1] com.blog.dao.TypeDao.getBlogType_COUNT   : <==      Total: 1
2022-05-03 16:59:18.057 DEBUG 12064 --- [http-nio-8080-exec-1] com.blog.dao.TypeDao.getBlogType         : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title, b.type_id from t_type t, t_blog b where t.id = b.type_id LIMIT ? 
2022-05-03 16:59:18.057 DEBUG 12064 --- [http-nio-8080-exec-1] com.blog.dao.TypeDao.getBlogType         : ==> Parameters: 100(Integer)
2022-05-03 16:59:18.059 DEBUG 12064 --- [http-nio-8080-exec-1] com.blog.dao.TypeDao.getBlogType         : <==      Total: 9
2022-05-03 16:59:18.060 DEBUG 12064 --- [http-nio-8080-exec-1] com.blog.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name typename, t.id typeid, u.nickname, u.avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2022-05-03 16:59:18.060 DEBUG 12064 --- [http-nio-8080-exec-1] com.blog.dao.BlogDao.getByTypeId         : ==> Parameters: 6(Long)
2022-05-03 16:59:18.062 DEBUG 12064 --- [http-nio-8080-exec-1] com.blog.dao.BlogDao.getByTypeId         : <==      Total: 2
2022-05-03 16:59:18.063  INFO 12064 --- [http-nio-8080-exec-1] com.blog.aspect.LogAspect                : ------------doAfter------------
2022-05-03 16:59:18.063  INFO 12064 --- [http-nio-8080-exec-1] com.blog.aspect.LogAspect                : Result: types
2022-05-03 16:59:19.357  INFO 12064 --- [http-nio-8080-exec-2] com.blog.aspect.LogAspect                : Request: LogAspect.RequestLog(url=http://localhost:8080/tags/-1, ip=0:0:0:0:0:0:0:1, classMethod=com.blog.controller.TagShowController.types, args=[-1, 1, {}])
2022-05-03 16:59:19.359 DEBUG 12064 --- [http-nio-8080-exec-2] com.blog.dao.TagDao.getBlogTag_COUNT     : ==>  Preparing: SELECT count(0) FROM t_tag t, t_blog b, t_blog_tags bt WHERE t.id = bt.tag_id AND b.id = bt.blog_id 
2022-05-03 16:59:19.360 DEBUG 12064 --- [http-nio-8080-exec-2] com.blog.dao.TagDao.getBlogTag_COUNT     : ==> Parameters: 
2022-05-03 16:59:19.361 DEBUG 12064 --- [http-nio-8080-exec-2] com.blog.dao.TagDao.getBlogTag_COUNT     : <==      Total: 1
2022-05-03 16:59:19.362 DEBUG 12064 --- [http-nio-8080-exec-2] com.blog.dao.TagDao.getBlogTag           : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title from t_tag t, t_blog b, t_blog_tags bt where t.id = bt.tag_id and b.id = bt.blog_id LIMIT ? 
2022-05-03 16:59:19.362 DEBUG 12064 --- [http-nio-8080-exec-2] com.blog.dao.TagDao.getBlogTag           : ==> Parameters: 100(Integer)
2022-05-03 16:59:19.365 DEBUG 12064 --- [http-nio-8080-exec-2] com.blog.dao.TagDao.getBlogTag           : <==      Total: 19
2022-05-03 16:59:19.366 DEBUG 12064 --- [http-nio-8080-exec-2] com.blog.dao.BlogDao.getByTagId          : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name typename, t.id typeid, t1.name tagname, t1.id tagid, u.nickname, u.avatar from t_blog b, t_type t, t_user u, t_blog_tags tb, t_tag t1 where b.type_id = t.id and u.id = b.user_id and tb.blog_id = b.id and tb.tag_id = t1.id and t1.id = ? order by b.update_time desc 
2022-05-03 16:59:19.366 DEBUG 12064 --- [http-nio-8080-exec-2] com.blog.dao.BlogDao.getByTagId          : ==> Parameters: 3(Long)
2022-05-03 16:59:19.369 DEBUG 12064 --- [http-nio-8080-exec-2] com.blog.dao.BlogDao.getByTagId          : <==      Total: 1
2022-05-03 16:59:19.371  INFO 12064 --- [http-nio-8080-exec-2] com.blog.aspect.LogAspect                : ------------doAfter------------
2022-05-03 16:59:19.371  INFO 12064 --- [http-nio-8080-exec-2] com.blog.aspect.LogAspect                : Result: tags
2022-05-03 16:59:21.954  INFO 12064 --- [http-nio-8080-exec-9] com.blog.aspect.LogAspect                : Request: LogAspect.RequestLog(url=http://localhost:8080/types/-1, ip=0:0:0:0:0:0:0:1, classMethod=com.blog.controller.TypeShowController.types, args=[-1, 1, {}])
2022-05-03 16:59:21.956 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.getBlogType_COUNT   : ==>  Preparing: SELECT count(0) FROM t_type t, t_blog b WHERE t.id = b.type_id 
2022-05-03 16:59:21.956 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.getBlogType_COUNT   : ==> Parameters: 
2022-05-03 16:59:21.957 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.getBlogType_COUNT   : <==      Total: 1
2022-05-03 16:59:21.957 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.getBlogType         : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title, b.type_id from t_type t, t_blog b where t.id = b.type_id LIMIT ? 
2022-05-03 16:59:21.958 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.getBlogType         : ==> Parameters: 100(Integer)
2022-05-03 16:59:21.960 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.TypeDao.getBlogType         : <==      Total: 9
2022-05-03 16:59:21.961 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name typename, t.id typeid, u.nickname, u.avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2022-05-03 16:59:21.961 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.BlogDao.getByTypeId         : ==> Parameters: 6(Long)
2022-05-03 16:59:21.963 DEBUG 12064 --- [http-nio-8080-exec-9] com.blog.dao.BlogDao.getByTypeId         : <==      Total: 2
2022-05-03 16:59:21.963  INFO 12064 --- [http-nio-8080-exec-9] com.blog.aspect.LogAspect                : ------------doAfter------------
2022-05-03 16:59:21.963  INFO 12064 --- [http-nio-8080-exec-9] com.blog.aspect.LogAspect                : Result: types
2022-05-03 16:59:35.006  INFO 12064 --- [http-nio-8080-exec-6] com.blog.aspect.LogAspect                : Request: LogAspect.RequestLog(url=http://localhost:8080/types/1, ip=0:0:0:0:0:0:0:1, classMethod=com.blog.controller.TypeShowController.types, args=[1, 1, {}])
2022-05-03 16:59:35.009 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getBlogType_COUNT   : ==>  Preparing: SELECT count(0) FROM t_type t, t_blog b WHERE t.id = b.type_id 
2022-05-03 16:59:35.009 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getBlogType_COUNT   : ==> Parameters: 
2022-05-03 16:59:35.011 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getBlogType_COUNT   : <==      Total: 1
2022-05-03 16:59:35.011 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getBlogType         : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title, b.type_id from t_type t, t_blog b where t.id = b.type_id LIMIT ? 
2022-05-03 16:59:35.012 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getBlogType         : ==> Parameters: 100(Integer)
2022-05-03 16:59:35.013 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.TypeDao.getBlogType         : <==      Total: 9
2022-05-03 16:59:35.013 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name typename, t.id typeid, u.nickname, u.avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2022-05-03 16:59:35.014 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getByTypeId         : ==> Parameters: 1(Long)
2022-05-03 16:59:35.015 DEBUG 12064 --- [http-nio-8080-exec-6] com.blog.dao.BlogDao.getByTypeId         : <==      Total: 5
2022-05-03 16:59:35.015  INFO 12064 --- [http-nio-8080-exec-6] com.blog.aspect.LogAspect                : ------------doAfter------------
2022-05-03 16:59:35.015  INFO 12064 --- [http-nio-8080-exec-6] com.blog.aspect.LogAspect                : Result: types
2022-05-03 16:59:35.112 ERROR 12064 --- [http-nio-8080-exec-6] c.b.handler.ControllerExceptionHandler   : Request url: /types/44,44, Exception: {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "44,44"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:133) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) [spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) [spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) [spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) [tomcat-embed-websocket-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) [spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) [spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) [spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_281]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_281]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_281]
Caused by: java.lang.NumberFormatException: For input string: "44,44"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65) ~[na:1.8.0_281]
	at java.lang.Long.parseLong(Long.java:589) ~[na:1.8.0_281]
	at java.lang.Long.valueOf(Long.java:803) ~[na:1.8.0_281]
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:214) ~[spring-core-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693) ~[spring-context-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:125) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	... 47 common frames omitted

2022-05-03 16:59:35.112 ERROR 12064 --- [http-nio-8080-exec-4] c.b.handler.ControllerExceptionHandler   : Request url: /types/1,1, Exception: {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "1,1"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:133) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) [spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) [spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) [spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) [tomcat-embed-websocket-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) [spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) [spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) [spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_281]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_281]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_281]
Caused by: java.lang.NumberFormatException: For input string: "1,1"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65) ~[na:1.8.0_281]
	at java.lang.Long.parseLong(Long.java:589) ~[na:1.8.0_281]
	at java.lang.Long.valueOf(Long.java:803) ~[na:1.8.0_281]
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:214) ~[spring-core-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693) ~[spring-context-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:125) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	... 47 common frames omitted

2022-05-03 16:59:35.112  WARN 12064 --- [http-nio-8080-exec-6] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "44,44"]
2022-05-03 16:59:35.113  WARN 12064 --- [http-nio-8080-exec-4] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "1,1"]
2022-05-03 16:59:35.112 ERROR 12064 --- [http-nio-8080-exec-2] c.b.handler.ControllerExceptionHandler   : Request url: /types/%E6%97%A0,a%20g, Exception: {}

org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "无,ag"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:133) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) [spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) [spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) [spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) [tomcat-embed-websocket-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) [spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) [spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) [spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_281]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_281]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.31.jar:9.0.31]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_281]
Caused by: java.lang.NumberFormatException: For input string: "无,ag"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65) ~[na:1.8.0_281]
	at java.lang.Long.parseLong(Long.java:589) ~[na:1.8.0_281]
	at java.lang.Long.valueOf(Long.java:803) ~[na:1.8.0_281]
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:214) ~[spring-core-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53) ~[spring-beans-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693) ~[spring-context-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:125) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	... 47 common frames omitted

2022-05-03 16:59:35.113  WARN 12064 --- [http-nio-8080-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "无,ag"]
2022-05-03 16:59:36.686  INFO 12064 --- [http-nio-8080-exec-5] com.blog.aspect.LogAspect                : Request: LogAspect.RequestLog(url=http://localhost:8080/types/3, ip=0:0:0:0:0:0:0:1, classMethod=com.blog.controller.TypeShowController.types, args=[3, 1, {}])
2022-05-03 16:59:36.687 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TypeDao.getBlogType_COUNT   : ==>  Preparing: SELECT count(0) FROM t_type t, t_blog b WHERE t.id = b.type_id 
2022-05-03 16:59:36.687 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TypeDao.getBlogType_COUNT   : ==> Parameters: 
2022-05-03 16:59:36.688 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TypeDao.getBlogType_COUNT   : <==      Total: 1
2022-05-03 16:59:36.688 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TypeDao.getBlogType         : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title, b.type_id from t_type t, t_blog b where t.id = b.type_id LIMIT ? 
2022-05-03 16:59:36.688 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TypeDao.getBlogType         : ==> Parameters: 100(Integer)
2022-05-03 16:59:36.688 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.TypeDao.getBlogType         : <==      Total: 9
2022-05-03 16:59:36.689 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name typename, t.id typeid, u.nickname, u.avatar from t_blog b, t_type t, t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2022-05-03 16:59:36.689 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.BlogDao.getByTypeId         : ==> Parameters: 3(Long)
2022-05-03 16:59:36.690 DEBUG 12064 --- [http-nio-8080-exec-5] com.blog.dao.BlogDao.getByTypeId         : <==      Total: 1
2022-05-03 16:59:36.690  INFO 12064 --- [http-nio-8080-exec-5] com.blog.aspect.LogAspect                : ------------doAfter------------
2022-05-03 16:59:36.690  INFO 12064 --- [http-nio-8080-exec-5] com.blog.aspect.LogAspect                : Result: types
